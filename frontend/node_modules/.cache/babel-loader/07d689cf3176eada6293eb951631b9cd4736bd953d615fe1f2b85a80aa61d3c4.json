{"ast":null,"code":"import React,{useState,useEffect}from'react';import{Container,Box,Typography,Select,MenuItem,Button,Paper,Alert,LinearProgress,IconButton}from'@mui/material';import NavBar from'./NavBar';import axios from'axios';import{useAuth}from'../AuthContext';import ProcessedResult from'./ProcessedResult';import PIWASUpload from'./PIWASUpload';import PIEUpload from'./PIEUpload';import{Link as RouterLink}from'react-router-dom';import HelpOutlineIcon from'@mui/icons-material/HelpOutline';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const defaultFiles={caseSample:{'AD001-FU4':'AD311-FU4','AD002-FU4':'AD015-FU4','AD003-FU4':'AD033-FU4','AD004-FU4':'AD055-FU4','AD006-FU4':'AD012-FU4','AD007-FU4':'AD043-FU4','AD011-FU4':'AD308-FU4','AD016-FU4':'AD005-FU4','AD022-FU4':'AD024-FU4',// 'AD028-FU4': 'AD037-FU4', 028 not provide\n'AD035-FU4':'AD056-FU4','AD042-FU4':'AD301-FU4','AD044-FU4':'AD079-FU4','AD053-FU4':'AD025-FU4','AD058-FU4':'AD021-FU4','AD077-FU4':'AD013-FU4','AD302-FU4':'AD067-FU4',// 'AD303-FU4': 'AD031-FU4', 031 not provide\n'AD304-FU4':'AD051-FU4','AD306-FU4':'AD040-FU4','AD309-FU4':'AD059-FU4','AD312-FU4':'AD072-FU4','AD313-FU4':'AD073-FU4','AD315-FU4':'AD052-FU4','AD316-FU4':'AD054-FU4','AD318-FU4':'AD325-FU4','AD319-FU4':'AD046-FU4','AD320-FU4':'AD029-FU4','AD322-FU4':'AD321-FU4','AD323-FU4':'AD023-FU4','AD324-FU4':'AD081-FU4'},proteinSequence:['P0DTC9']};const Pipeline=()=>{const{token}=useAuth();// 从AuthContext获取Token\nconst[algorithm,setAlgorithm]=useState('');// 算法\nconst[files,setFiles]=useState({caseSample:[],controlSample:[],proteinSequence:[]});//文件\nconst[fileSources,setFileSources]=useState({caseControlSample:'local',caseSample:'local',controlSample:'local',proteinSequence:'local'});const[uploadedFiles,setUploadedFiles]=useState([]);const[errorMessage,setErrorMessage]=useState('');const[running,setRunning]=useState(false);const[progress,setProgress]=useState(0);const[processedFile,setProcessedFile]=useState(null);useEffect(()=>{let timer;if(running){timer=setInterval(()=>{setProgress(prevProgress=>{if(prevProgress>=80){clearInterval(timer);return prevProgress;}return prevProgress+80/360;// 6分钟达到80%\n});},1000);}return()=>{clearInterval(timer);};},[running]);useEffect(()=>{if(processedFile&&progress<100){setProgress(100);}},[processedFile]);// 算法改变\nconst handleAlgorithmChange=event=>{setAlgorithm(event.target.value);setFiles({caseSample:[],controlSample:[],proteinSequence:[]});setFileSources({caseControlSample:'local',caseSample:'local',controlSample:'local',proteinSequence:'local'});setUploadedFiles([]);setErrorMessage('');setRunning(false);setProgress(0);setProcessedFile(null);};// 处理用户选择的文件，并将其更新到组件的状态中。用户可以选择多个文件并将其添加到指定的文件列表中，同时确保文件不会重复添加。\nconst handleFileChange=event=>{const{name,files:selectedFiles}=event.target;const updatedFiles={...files,[name]:[...files[name],...Array.from(selectedFiles)]};setFiles(updatedFiles);setUploadedFiles(prev=>{const filteredFiles=prev.filter(f=>{var _files$name;return!((_files$name=files[name])!==null&&_files$name!==void 0&&_files$name.includes(f));});return[...filteredFiles,...Array.from(selectedFiles)];});// console.log(\"file change\")\n};// 处理选择的默认文件，并将其更新到组件的状态中。这样，当用户选择一个默认文件时，\n// 文件状态和已上传文件列表都会相应地更新，同时 caseSample 和 controlSample 文件会同步更新。\nconst handleDefaultFileSelect=(name,file)=>{let updatedFiles;// case/control 文件选择\nif(name==='caseSample'){updatedFiles={...files,[name]:[file],controlSample:[defaultFiles.caseSample[file]]};}else{updatedFiles={...files,[name]:[file]};// 蛋白质文件选择\n}setFiles(updatedFiles);setUploadedFiles(prev=>[...prev,...updatedFiles[name]]);// console.log('Updated files after selecting default file:', updatedFiles);\n// console.log(files);\n};// 文件来源\nconst handleFileSourceChange=(event,fileType)=>{const value=event.target.value;// console.log(\"begin\",fileSources);\n// console.log(`Changing file source for ${fileType} to ${value}`)\nsetFileSources(prev=>({...prev,[fileType]:value}));// 清空文件列表\nif(fileType==='caseControlSample'){setFiles(prev=>({...prev,caseSample:[],controlSample:[]}));}else if(fileType==='proteinSequence'){setFiles(prev=>({...prev,proteinSequence:[]}));}// console.log(fileSources);\n};const downloadFile=async fileType=>{try{// 发送请求到后端，获取打包好的 ZIP 文件\nconst response=await axios.post('http://localhost:8000/api/download-result-zip/',{file_paths:processedFile,// 传递文件路径\nfile_type:fileType// 传递文件类型（excel 或 csv）\n},{responseType:'blob'// 设置响应类型为 blob，以便处理二进制文件\n});// 创建一个 URL 对象，用于下载文件\nconst url=window.URL.createObjectURL(new Blob([response.data]));const link=document.createElement('a');link.href=url;link.setAttribute('download','results.zip');// 设置下载文件名\ndocument.body.appendChild(link);link.click();}catch(error){// 处理错误，设置错误消息\nsetErrorMessage('Error downloading file: '+error.message);}};// 用于上传文件，支持上传单个/多个文件\nconst uploadFiles=async(url,files,fieldName)=>{const formData=new FormData();// 判断 files 是数组还是单个文件\nif(Array.isArray(files)){// 如果是数组，将每个文件添加到 FormData\nfiles.forEach(file=>formData.append(fieldName,file));}else{// 如果是单个文件，直接添加到 FormData\nformData.append(fieldName,files);}try{const response=await axios.post(url,formData,{headers:{'Content-Type':'multipart/form-data','Authorization':\"Bearer \".concat(token)// 在请求头中包含Token\n}});// 根据响应数据的结构处理返回值\nif(Array.isArray(files)){console.log(\"Successfully uploaded files to \".concat(url,\":\"),response.data.file_paths);return response.data.file_paths;}else{console.log(\"Successfully uploaded file to \".concat(url,\":\"),response.data.file_path);return response.data.file_path;}}catch(error){console.error(\"Error uploading file(s) to \".concat(url,\":\"),error);throw error;}};// 上传default文件\nconst uploadDefaultFiles=async(url,caseFolder,controlFolder)=>{try{const response=await axios.post(url,{case_folder:caseFolder,control_folder:controlFolder},{headers:{'Authorization':\"Bearer \".concat(token)// 在请求头中包含Token\n}});console.log(\"Successfully processed file pair for \".concat(caseFolder,\" and \").concat(controlFolder,\":\"),response.data);return response.data;}catch(error){console.error(\"Error processing file pair for \".concat(caseFolder,\" and \").concat(controlFolder,\":\"),error);throw error;}};const uploadDefaultProteinFile=async(url,proteinFolder)=>{try{const response=await axios.post(url,{protein_folder:proteinFolder},{headers:{'Authorization':\"Bearer \".concat(token)// 在请求头中包含Token\n}});console.log(\"Successfully processed protein folder \".concat(proteinFolder,\":\"),response.data);return response.data.protein_file_path;}catch(error){console.error(\"Error processing protein folder \".concat(proteinFolder,\":\"),error);throw error;}};const handleRun=async()=>{if(!algorithm){setErrorMessage('You must select an algorithm.');return;}setErrorMessage('');setRunning(true);try{let runResponse,caseFilePaths,controlFilePaths,proteinFilePath;// protein sequence\n// check\nif(files.proteinSequence.length!==1){setErrorMessage('You must submit exactly one protein sequence file.');setRunning(false);return;}// upload\nif(fileSources.proteinSequence===\"local\"){proteinFilePath=await uploadFiles('http://localhost:8000/api/upload-protein-file/',files.proteinSequence,'protein_file');}else{proteinFilePath=await uploadDefaultProteinFile('http://localhost:8000/api/process-protein-file/',files.proteinSequence[0]);}if(algorithm==='PIWAS'||algorithm==='PIWAS+PIE'){if(fileSources.caseControlSample===\"local\"){if(files.caseSample.length!==2){setErrorMessage('You must submit exactly two case sample files (5-mer and 6-mer).');setRunning(false);return;}if(files.controlSample.length!==2){setErrorMessage('You must submit exactly two control sample files (5-mer and 6-mer).');setRunning(false);return;}caseFilePaths=await uploadFiles('http://localhost:8000/api/upload-case-files/',files.caseSample,'case_files');controlFilePaths=await uploadFiles('http://localhost:8000/api/upload-control-files/',files.controlSample,'control_files');if(!proteinFilePath){setErrorMessage('Error uploading protein sequence file.');setRunning(false);return;}}else{if(files.caseSample.length!==1){setErrorMessage('You must select one default file pair.');setRunning(false);return;}const caseControlPaths=await uploadDefaultFiles('http://localhost:8000/api/process-file-pair/',files.caseSample[0],files.controlSample[0]);caseFilePaths=caseControlPaths.case_file_paths;controlFilePaths=caseControlPaths.control_file_paths;}const requestBody={case_file_paths:{kmer_5:caseFilePaths.find(path=>path.includes('5')),kmer_6:caseFilePaths.find(path=>path.includes('6'))},control_file_paths:{kmer_5:controlFilePaths.find(path=>path.includes('5')),kmer_6:controlFilePaths.find(path=>path.includes('6'))},protein_file_path:proteinFilePath};// console.log(requestBody)\nrunResponse=await axios.post(\"http://localhost:8000/api/run-\".concat(algorithm.toLowerCase(),\"-algorithm/\"),requestBody,{headers:{'Authorization':\"Bearer \".concat(token)},timeout:600000});}else if(algorithm==='PIE'){if(files.caseSample.length!==1||files.controlSample.length!==1){setErrorMessage('You must submit exactly two PIWAS result files (case result and control result).');setRunning(false);return;}let piwasCaseFilePath,piwasControlFilePath;const piwasResult=[files.caseSample[0],files.controlSample[0]];const piwasResultPaths=await uploadFiles('http://localhost:8000/api/upload-piwas-results/',piwasResult,'piwas_result_files');if(!piwasResultPaths||piwasResultPaths.length<2){setErrorMessage('Error uploading PIWAS result files.');setRunning(false);return;}piwasCaseFilePath=piwasResultPaths.find(path=>path.includes('case'));piwasControlFilePath=piwasResultPaths.find(path=>path.includes('control'));runResponse=await axios.post('http://localhost:8000/api/run-pie-algorithm/',{piwas_case_file_path:piwasCaseFilePath,piwas_control_file_path:piwasControlFilePath,protein_file_path:proteinFilePath},{headers:{'Authorization':\"Bearer \".concat(token)},timeout:600000});}if(runResponse.data.status==='success'){setProcessedFile(runResponse.data.file_paths);}else{setErrorMessage(runResponse.data.error||'Unknown error occurred.');}}catch(error){var _error$response,_error$response$data;setErrorMessage('Error running pipeline: '+(((_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:_error$response$data.error)||error.message));}finally{if(!processedFile){setRunning(false);}}};const handleReset=()=>{setAlgorithm('');setFiles({caseSample:[],controlSample:[],proteinSequence:[]});setFileSources({caseControlSample:'local',caseSample:'local',controlSample:'local',proteinSequence:'local'});setUploadedFiles([]);setErrorMessage('');setRunning(false);setProgress(0);setProcessedFile(null);};const handleFileDelete=(fileType,index)=>{const updatedFiles={...files,[fileType]:files[fileType].filter((_,i)=>i!==index)};setFiles(updatedFiles);setUploadedFiles(uploadedFiles.filter((file,i)=>{// 确保删除正确的文件类型\nconst isCorrectFileType=Object.keys(files).some(key=>files[key].includes(file)&&key===fileType);return i!==index||!isCorrectFileType;}));};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(NavBar,{}),/*#__PURE__*/_jsx(Container,{component:\"main\",maxWidth:\"md\",sx:{marginTop:10},children:/*#__PURE__*/_jsxs(Box,{sx:{marginTop:8,display:'flex',flexDirection:'column',alignItems:'center'},children:[!running&&!processedFile&&/*#__PURE__*/_jsxs(Box,{sx:{mt:3,mb:5,width:'100%'},children:[/*#__PURE__*/_jsxs(Paper,{elevation:3,sx:{p:3,backgroundColor:'#ffffff',mb:5,position:'relative',border:'1px solid #ccc'},children:[/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',alignItems:'center',position:'absolute',top:-20,left:16,backgroundColor:'#ffffff',px:1},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",children:\"Algorithm Selection\"}),/*#__PURE__*/_jsx(IconButton,{component:RouterLink,to:\"/#section2\",sx:{ml:1},children:/*#__PURE__*/_jsx(HelpOutlineIcon,{})})]}),/*#__PURE__*/_jsxs(Select,{fullWidth:true,value:algorithm,onChange:handleAlgorithmChange,displayEmpty:true,sx:{mt:3,mb:3,height:50},children:[/*#__PURE__*/_jsx(MenuItem,{value:\"\",disabled:true,children:\"Select an algorithm\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"PIWAS\",children:\"PIWAS\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"PIE\",children:\"PIE\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"PIWAS+PIE\",children:\"PIWAS+PIE\"})]})]}),algorithm&&/*#__PURE__*/_jsxs(Paper,{elevation:3,sx:{p:3,backgroundColor:'#ffffff',mb:5,position:'relative',border:'1px solid #ccc'},children:[/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',alignItems:'center',position:'absolute',top:-20,left:16,backgroundColor:'#ffffff',px:1},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",children:algorithm==='PIE'?'Upload PIWAS Results and Protein Sequence':'Upload Files'}),/*#__PURE__*/_jsx(IconButton,{component:RouterLink,to:\"/#section4\",sx:{ml:1},children:/*#__PURE__*/_jsx(HelpOutlineIcon,{})})]}),algorithm==='PIE'?/*#__PURE__*/_jsx(PIEUpload,{fileSources:fileSources,handleFileSourceChange:handleFileSourceChange,files:files,handleFileChange:handleFileChange,handleFileDelete:handleFileDelete,handleDefaultFileSelect:handleDefaultFileSelect,defaultFiles:defaultFiles}):/*#__PURE__*/_jsx(PIWASUpload,{fileSources:fileSources,handleFileSourceChange:handleFileSourceChange,files:files,handleFileChange:handleFileChange,handleFileDelete:handleFileDelete,handleDefaultFileSelect:handleDefaultFileSelect,defaultFiles:defaultFiles})]}),errorMessage&&/*#__PURE__*/_jsx(Alert,{severity:\"error\",children:errorMessage}),/*#__PURE__*/_jsxs(Box,{sx:{mt:3,display:'flex',justifyContent:'space-between'},children:[/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:\"primary\",onClick:handleRun,children:\"Run\"}),/*#__PURE__*/_jsx(Button,{variant:\"outlined\",color:\"secondary\",onClick:handleReset,children:\"Reset\"})]})]}),running&&/*#__PURE__*/_jsxs(Box,{sx:{width:'100%',mt:40},children:[/*#__PURE__*/_jsx(LinearProgress,{variant:\"determinate\",value:progress}),/*#__PURE__*/_jsxs(Typography,{variant:\"h6\",sx:{mt:2,textAlign:'center'},children:[\"Running... \",Math.round(progress),\"%\"]})]}),processedFile&&/*#__PURE__*/_jsx(ProcessedResult,{processedFile:processedFile,downloadFile:downloadFile,handleReset:handleReset,algorithm:algorithm})]})})]});};export default Pipeline;","map":{"version":3,"names":["React","useState","useEffect","Container","Box","Typography","Select","MenuItem","Button","Paper","Alert","LinearProgress","IconButton","NavBar","axios","useAuth","ProcessedResult","PIWASUpload","PIEUpload","Link","RouterLink","HelpOutlineIcon","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","defaultFiles","caseSample","proteinSequence","Pipeline","token","algorithm","setAlgorithm","files","setFiles","controlSample","fileSources","setFileSources","caseControlSample","uploadedFiles","setUploadedFiles","errorMessage","setErrorMessage","running","setRunning","progress","setProgress","processedFile","setProcessedFile","timer","setInterval","prevProgress","clearInterval","handleAlgorithmChange","event","target","value","handleFileChange","name","selectedFiles","updatedFiles","Array","from","prev","filteredFiles","filter","f","_files$name","includes","handleDefaultFileSelect","file","handleFileSourceChange","fileType","downloadFile","response","post","file_paths","file_type","responseType","url","window","URL","createObjectURL","Blob","data","link","document","createElement","href","setAttribute","body","appendChild","click","error","message","uploadFiles","fieldName","formData","FormData","isArray","forEach","append","headers","concat","console","log","file_path","uploadDefaultFiles","caseFolder","controlFolder","case_folder","control_folder","uploadDefaultProteinFile","proteinFolder","protein_folder","protein_file_path","handleRun","runResponse","caseFilePaths","controlFilePaths","proteinFilePath","length","caseControlPaths","case_file_paths","control_file_paths","requestBody","kmer_5","find","path","kmer_6","toLowerCase","timeout","piwasCaseFilePath","piwasControlFilePath","piwasResult","piwasResultPaths","piwas_case_file_path","piwas_control_file_path","status","_error$response","_error$response$data","handleReset","handleFileDelete","index","_","i","isCorrectFileType","Object","keys","some","key","children","component","maxWidth","sx","marginTop","display","flexDirection","alignItems","mt","mb","width","elevation","p","backgroundColor","position","border","top","left","px","variant","to","ml","fullWidth","onChange","displayEmpty","height","disabled","severity","justifyContent","color","onClick","textAlign","Math","round"],"sources":["E:/宝可梦：无限融合/capstone-project-9900f14bravo/frontend/src/component/Pipeline.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Container, Box, Typography, Select, MenuItem, Button, Paper, Alert, LinearProgress, IconButton } from '@mui/material';\nimport NavBar from './NavBar';\nimport axios from 'axios';\nimport { useAuth } from '../AuthContext';\nimport ProcessedResult from './ProcessedResult';\nimport PIWASUpload from './PIWASUpload';\nimport PIEUpload from './PIEUpload';\nimport { Link as RouterLink } from 'react-router-dom';\nimport HelpOutlineIcon from '@mui/icons-material/HelpOutline';\n\nconst defaultFiles = {\n  caseSample: {\n    'AD001-FU4': 'AD311-FU4',\n    'AD002-FU4': 'AD015-FU4',\n    'AD003-FU4': 'AD033-FU4',\n    'AD004-FU4': 'AD055-FU4',\n    'AD006-FU4': 'AD012-FU4',\n    'AD007-FU4': 'AD043-FU4',\n    'AD011-FU4': 'AD308-FU4',\n    'AD016-FU4': 'AD005-FU4',\n    'AD022-FU4': 'AD024-FU4',\n    // 'AD028-FU4': 'AD037-FU4', 028 not provide\n    'AD035-FU4': 'AD056-FU4',\n    'AD042-FU4': 'AD301-FU4',\n    'AD044-FU4': 'AD079-FU4',\n    'AD053-FU4': 'AD025-FU4',\n    'AD058-FU4': 'AD021-FU4',\n    'AD077-FU4': 'AD013-FU4',\n    'AD302-FU4': 'AD067-FU4',\n    // 'AD303-FU4': 'AD031-FU4', 031 not provide\n    'AD304-FU4': 'AD051-FU4',\n    'AD306-FU4': 'AD040-FU4',\n    'AD309-FU4': 'AD059-FU4',\n    'AD312-FU4': 'AD072-FU4',\n    'AD313-FU4': 'AD073-FU4',\n    'AD315-FU4': 'AD052-FU4',\n    'AD316-FU4': 'AD054-FU4',\n    'AD318-FU4': 'AD325-FU4',\n    'AD319-FU4': 'AD046-FU4',\n    'AD320-FU4': 'AD029-FU4',\n    'AD322-FU4': 'AD321-FU4',\n    'AD323-FU4': 'AD023-FU4',\n    'AD324-FU4': 'AD081-FU4'\n  },\n  proteinSequence: ['P0DTC9'],\n};\n\nconst Pipeline = () => {\n  const { token } = useAuth(); // 从AuthContext获取Token\n  const [algorithm, setAlgorithm] = useState(''); // 算法\n  const [files, setFiles] = useState({\n    caseSample: [],\n    controlSample: [],\n    proteinSequence: [],\n  }); //文件\n  const [fileSources, setFileSources] = useState({\n    caseControlSample: 'local',\n    caseSample: 'local',\n    controlSample: 'local',\n    proteinSequence: 'local',\n  }); \n  const [uploadedFiles, setUploadedFiles] = useState([]); \n  const [errorMessage, setErrorMessage] = useState('');\n  const [running, setRunning] = useState(false);\n  const [progress, setProgress] = useState(0);\n  const [processedFile, setProcessedFile] = useState(null);\n\n  useEffect(() => {\n    let timer;\n    if (running) {\n      timer = setInterval(() => {\n        setProgress((prevProgress) => {\n          if (prevProgress >= 80) {\n            clearInterval(timer);\n            return prevProgress;\n          }\n          return prevProgress + (80 / 360); // 6分钟达到80%\n        });\n      }, 1000);\n    }\n    return () => {\n      clearInterval(timer);\n    };\n  }, [running]);\n\n  useEffect(() => {\n    if (processedFile && progress < 100) {\n      setProgress(100);\n    }\n  }, [processedFile]);\n\n  // 算法改变\n  const handleAlgorithmChange = (event) => {\n    setAlgorithm(event.target.value);\n    setFiles({\n      caseSample: [],\n      controlSample: [],\n      proteinSequence: [],\n    });\n    setFileSources({\n      caseControlSample: 'local',\n      caseSample: 'local',\n      controlSample: 'local',\n      proteinSequence: 'local',\n    });\n    setUploadedFiles([]);\n    setErrorMessage('');\n    setRunning(false);\n    setProgress(0);\n    setProcessedFile(null);\n  };\n\n  // 处理用户选择的文件，并将其更新到组件的状态中。用户可以选择多个文件并将其添加到指定的文件列表中，同时确保文件不会重复添加。\n  const handleFileChange = (event) => {\n    const { name, files: selectedFiles } = event.target;\n    const updatedFiles = { ...files, [name]: [...files[name], ...Array.from(selectedFiles)] };\n    setFiles(updatedFiles);\n    setUploadedFiles((prev) => {\n      const filteredFiles = prev.filter(f => !files[name]?.includes(f));\n      return [...filteredFiles, ...Array.from(selectedFiles)];\n    });\n    // console.log(\"file change\")\n  };\n\n  // 处理选择的默认文件，并将其更新到组件的状态中。这样，当用户选择一个默认文件时，\n  // 文件状态和已上传文件列表都会相应地更新，同时 caseSample 和 controlSample 文件会同步更新。\n  const handleDefaultFileSelect = (name, file) => {\n    let updatedFiles;\n    // case/control 文件选择\n    if (name === 'caseSample') {\n      updatedFiles = { ...files, [name]: [file], controlSample: [defaultFiles.caseSample[file]] };\n    } else {\n      updatedFiles = { ...files, [name]: [file] }; // 蛋白质文件选择\n    }\n    setFiles(updatedFiles);\n    setUploadedFiles((prev) => [...prev, ...updatedFiles[name]]);\n    // console.log('Updated files after selecting default file:', updatedFiles);\n    // console.log(files);\n  };\n\n  // 文件来源\n  const handleFileSourceChange = (event, fileType) => {\n    const value = event.target.value;\n    // console.log(\"begin\",fileSources);\n    // console.log(`Changing file source for ${fileType} to ${value}`)\n    setFileSources(prev => ({ ...prev, [fileType]: value }));\n  \n    // 清空文件列表\n    if (fileType === 'caseControlSample') {\n      setFiles(prev => ({ ...prev, caseSample: [], controlSample: [] }));\n    } else if (fileType === 'proteinSequence') {\n      setFiles(prev => ({ ...prev, proteinSequence: [] }));\n    }\n    // console.log(fileSources);\n  };\n  \n  \n  const downloadFile = async (fileType) => {\n    try {\n      // 发送请求到后端，获取打包好的 ZIP 文件\n      const response = await axios.post('http://localhost:8000/api/download-result-zip/', {\n        file_paths: processedFile, // 传递文件路径\n        file_type: fileType,       // 传递文件类型（excel 或 csv）\n      }, {\n        responseType: 'blob', // 设置响应类型为 blob，以便处理二进制文件\n      });\n  \n      // 创建一个 URL 对象，用于下载文件\n      const url = window.URL.createObjectURL(new Blob([response.data]));\n      const link = document.createElement('a');\n      link.href = url;\n      link.setAttribute('download', 'results.zip'); // 设置下载文件名\n      document.body.appendChild(link);\n      link.click();\n    } catch (error) {\n      // 处理错误，设置错误消息\n      setErrorMessage('Error downloading file: ' + error.message);\n    }\n  };\n\n  // 用于上传文件，支持上传单个/多个文件\n  const uploadFiles = async (url, files, fieldName) => {\n    const formData = new FormData();\n  \n    // 判断 files 是数组还是单个文件\n    if (Array.isArray(files)) {\n      // 如果是数组，将每个文件添加到 FormData\n      files.forEach(file => formData.append(fieldName, file));\n    } else {\n      // 如果是单个文件，直接添加到 FormData\n      formData.append(fieldName, files);\n    }\n  \n    try {\n      const response = await axios.post(url, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n          'Authorization': `Bearer ${token}` // 在请求头中包含Token\n        }\n      });\n  \n      // 根据响应数据的结构处理返回值\n      if (Array.isArray(files)) {\n        console.log(`Successfully uploaded files to ${url}:`, response.data.file_paths);\n        return response.data.file_paths;\n      } else {\n        console.log(`Successfully uploaded file to ${url}:`, response.data.file_path);\n        return response.data.file_path;\n      }\n    } catch (error) {\n      console.error(`Error uploading file(s) to ${url}:`, error);\n      throw error;\n    }\n  };\n\n  // 上传default文件\n  const uploadDefaultFiles = async (url, caseFolder, controlFolder) => {\n    try {\n      const response = await axios.post(url, {\n        case_folder: caseFolder,\n        control_folder: controlFolder\n      }, {\n        headers: {\n          'Authorization': `Bearer ${token}` // 在请求头中包含Token\n        }\n      });\n  \n      console.log(`Successfully processed file pair for ${caseFolder} and ${controlFolder}:`, response.data);\n      return response.data;\n    } catch (error) {\n      console.error(`Error processing file pair for ${caseFolder} and ${controlFolder}:`, error);\n      throw error;\n    }\n  };\n\n  const uploadDefaultProteinFile = async (url, proteinFolder) => {\n    try {\n        const response = await axios.post(url, {\n            protein_folder: proteinFolder\n        }, {\n            headers: {\n                'Authorization': `Bearer ${token}` // 在请求头中包含Token\n            }\n        });\n\n        console.log(`Successfully processed protein folder ${proteinFolder}:`, response.data);\n        return response.data.protein_file_path;\n    } catch (error) {\n        console.error(`Error processing protein folder ${proteinFolder}:`, error);\n        throw error;\n    }\n  };\n\n  const handleRun = async () => {\n    if (!algorithm) {\n      setErrorMessage('You must select an algorithm.');\n      return;\n    }\n  \n    setErrorMessage('');\n    setRunning(true);\n  \n    try {\n      let runResponse, caseFilePaths, controlFilePaths, proteinFilePath;\n  \n      // protein sequence\n      // check\n      if (files.proteinSequence.length !== 1) {\n        setErrorMessage('You must submit exactly one protein sequence file.');\n        setRunning(false);\n        return;\n      }\n      // upload\n      if (fileSources.proteinSequence === \"local\") {\n        proteinFilePath = await uploadFiles('http://localhost:8000/api/upload-protein-file/', files.proteinSequence, 'protein_file');\n      } else {\n        proteinFilePath = await uploadDefaultProteinFile('http://localhost:8000/api/process-protein-file/', files.proteinSequence[0]);\n      }\n  \n      if (algorithm === 'PIWAS' || algorithm === 'PIWAS+PIE') {\n        if (fileSources.caseControlSample === \"local\") {\n          if (files.caseSample.length !== 2) {\n            setErrorMessage('You must submit exactly two case sample files (5-mer and 6-mer).');\n            setRunning(false);\n            return;\n          }\n          if (files.controlSample.length !== 2) {\n            setErrorMessage('You must submit exactly two control sample files (5-mer and 6-mer).');\n            setRunning(false);\n            return;\n          }\n          \n          caseFilePaths = await uploadFiles('http://localhost:8000/api/upload-case-files/', files.caseSample, 'case_files');\n          controlFilePaths = await uploadFiles('http://localhost:8000/api/upload-control-files/', files.controlSample, 'control_files');\n          \n          if (!proteinFilePath) {\n            setErrorMessage('Error uploading protein sequence file.');\n            setRunning(false);\n            return;\n          }\n        } else {\n          if (files.caseSample.length !== 1) {\n            setErrorMessage('You must select one default file pair.');\n            setRunning(false);\n            return;\n          }\n          const caseControlPaths = await uploadDefaultFiles('http://localhost:8000/api/process-file-pair/', files.caseSample[0], files.controlSample[0]);\n          caseFilePaths = caseControlPaths.case_file_paths;\n          controlFilePaths = caseControlPaths.control_file_paths;\n        }\n  \n        const requestBody = {\n          case_file_paths: {\n            kmer_5: caseFilePaths.find(path => path.includes('5')),\n            kmer_6: caseFilePaths.find(path => path.includes('6')),\n          },\n          control_file_paths: {\n            kmer_5: controlFilePaths.find(path => path.includes('5')),\n            kmer_6: controlFilePaths.find(path => path.includes('6')),\n          },\n          protein_file_path: proteinFilePath\n        };\n  \n        // console.log(requestBody)\n  \n        runResponse = await axios.post(`http://localhost:8000/api/run-${algorithm.toLowerCase()}-algorithm/`, requestBody, {\n          headers: { 'Authorization': `Bearer ${token}` },\n          timeout: 600000\n        });\n      }\n  \n      else if (algorithm === 'PIE') {\n        if (files.caseSample.length !== 1 || files.controlSample.length !== 1) {\n          setErrorMessage('You must submit exactly two PIWAS result files (case result and control result).');\n          setRunning(false);\n          return;\n        }\n  \n        let piwasCaseFilePath, piwasControlFilePath;\n        const piwasResult = [files.caseSample[0], files.controlSample[0]];\n        const piwasResultPaths = await uploadFiles('http://localhost:8000/api/upload-piwas-results/', piwasResult, 'piwas_result_files');\n        if (!piwasResultPaths || piwasResultPaths.length < 2) {\n          setErrorMessage('Error uploading PIWAS result files.');\n          setRunning(false);\n          return;\n        }\n        piwasCaseFilePath = piwasResultPaths.find(path => path.includes('case'));\n        piwasControlFilePath = piwasResultPaths.find(path => path.includes('control'));\n      \n  \n        runResponse = await axios.post('http://localhost:8000/api/run-pie-algorithm/', {\n          piwas_case_file_path: piwasCaseFilePath,\n          piwas_control_file_path: piwasControlFilePath,\n          protein_file_path: proteinFilePath\n        }, {\n          headers: { 'Authorization': `Bearer ${token}` },\n          timeout: 600000\n        });\n      }\n  \n      if (runResponse.data.status === 'success') {\n        setProcessedFile(runResponse.data.file_paths);\n      } else {\n        setErrorMessage(runResponse.data.error || 'Unknown error occurred.');\n      }\n    } catch (error) {\n      setErrorMessage('Error running pipeline: ' + (error.response?.data?.error || error.message));\n    } finally {\n      if (!processedFile) {\n        setRunning(false);\n      }\n    }\n  };\n\n  const handleReset = () => {\n    setAlgorithm('');\n    setFiles({\n      caseSample: [],\n      controlSample: [],\n      proteinSequence: [],\n    });\n    setFileSources({\n      caseControlSample: 'local',\n      caseSample: 'local',\n      controlSample: 'local',\n      proteinSequence: 'local',\n    });\n    setUploadedFiles([]);\n    setErrorMessage('');\n    setRunning(false);\n    setProgress(0);\n    setProcessedFile(null);\n  };\n\n  const handleFileDelete = (fileType, index) => {\n    const updatedFiles = { ...files, [fileType]: files[fileType].filter((_, i) => i !== index) };\n    setFiles(updatedFiles);\n    setUploadedFiles(uploadedFiles.filter((file, i) => {\n      // 确保删除正确的文件类型\n      const isCorrectFileType = Object.keys(files).some(key => files[key].includes(file) && key === fileType);\n      return i !== index || !isCorrectFileType;\n    }));\n  };\n\n  return (\n    <>\n      <NavBar />\n      <Container component=\"main\" maxWidth=\"md\" sx={{ marginTop: 10, }}> \n        <Box sx={{ marginTop: 8, display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n          {!running && !processedFile && (\n            <Box sx={{ mt: 3, mb: 5, width: '100%' }}>\n              <Paper elevation={3} sx={{ p: 3, backgroundColor: '#ffffff', mb: 5, position: 'relative', border: '1px solid #ccc' }}>\n                <Box sx={{ display: 'flex', alignItems: 'center', position: 'absolute', top: -20, left: 16, backgroundColor: '#ffffff', px: 1 }}>\n                  <Typography variant=\"h6\">\n                    Algorithm Selection\n                  </Typography>\n                  <IconButton component={RouterLink} to=\"/#section2\" sx={{ ml: 1 }}>\n                    <HelpOutlineIcon />\n                  </IconButton>\n                </Box>\n                <Select\n                  fullWidth\n                  value={algorithm}\n                  onChange={handleAlgorithmChange}\n                  displayEmpty\n                  sx={{ mt: 3, mb: 3, height: 50 }}\n                >\n                  <MenuItem value=\"\" disabled>Select an algorithm</MenuItem>\n                  <MenuItem value=\"PIWAS\">PIWAS</MenuItem>\n                  <MenuItem value=\"PIE\">PIE</MenuItem>\n                  <MenuItem value=\"PIWAS+PIE\">PIWAS+PIE</MenuItem>\n                </Select>\n              </Paper>\n\n              {algorithm && (\n                <Paper elevation={3} sx={{ p: 3, backgroundColor: '#ffffff', mb: 5, position: 'relative', border: '1px solid #ccc' }}>\n                <Box sx={{ display: 'flex', alignItems: 'center', position: 'absolute', top: -20, left: 16, backgroundColor: '#ffffff', px: 1 }}>\n                  <Typography variant=\"h6\">\n                    {algorithm === 'PIE' ? 'Upload PIWAS Results and Protein Sequence' : 'Upload Files'}\n                  </Typography>\n                  <IconButton component={RouterLink} to=\"/#section4\" sx={{ ml: 1 }}>\n                    <HelpOutlineIcon />\n                  </IconButton>\n                </Box>\n                {algorithm === 'PIE' ? (\n                  <PIEUpload\n                    fileSources={fileSources}\n                    handleFileSourceChange={handleFileSourceChange}\n                    files={files}\n                    handleFileChange={handleFileChange}\n                    handleFileDelete={handleFileDelete}\n                    handleDefaultFileSelect={handleDefaultFileSelect}\n                    defaultFiles={defaultFiles}\n                  />\n                ) : (\n                  <PIWASUpload\n                    fileSources={fileSources}\n                    handleFileSourceChange={handleFileSourceChange}\n                    files={files}\n                    handleFileChange={handleFileChange}\n                    handleFileDelete={handleFileDelete}\n                    handleDefaultFileSelect={handleDefaultFileSelect}\n                    defaultFiles={defaultFiles}\n                  />\n                )}\n              </Paper>\n              )}\n\n              {errorMessage && <Alert severity=\"error\">{errorMessage}</Alert>}\n              <Box sx={{ mt: 3, display: 'flex', justifyContent: 'space-between' }}>\n                <Button variant=\"contained\" color=\"primary\" onClick={handleRun}>\n                  Run\n                </Button>\n                <Button variant=\"outlined\" color=\"secondary\" onClick={handleReset}>\n                  Reset\n                </Button>\n              </Box>\n            </Box>\n          )}\n\n          {running && (\n            <Box sx={{ width: '100%', mt: 40 }}>\n              <LinearProgress variant=\"determinate\" value={progress} />\n              <Typography variant=\"h6\" sx={{ mt: 2, textAlign: 'center' }}>\n                Running... {Math.round(progress)}%\n              </Typography>\n            </Box>\n          )}\n\n          {processedFile && (\n            <ProcessedResult\n              processedFile={processedFile}\n              downloadFile={downloadFile}\n              handleReset={handleReset}\n              algorithm={algorithm}\n            />\n          )}\n        </Box>\n      </Container>\n    </>\n  );\n};\n\nexport default Pipeline;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}