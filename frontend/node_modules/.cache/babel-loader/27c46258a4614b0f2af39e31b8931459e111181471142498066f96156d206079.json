{"ast":null,"code":"var _jsxFileName = \"/Users/wenjing/Desktop/COMP9900/capstone-project-9900f14bravo/project/frontend/src/compoment/Pipeline.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Container, Box, Typography, Select, MenuItem, Button, Paper, Alert } from '@mui/material';\nimport NavBar from './NavBar';\nimport axios from 'axios';\nimport { useAuth } from '../AuthContext';\nimport ProcessedResult from './ProcessedResult';\nimport LoadingAnimation from './LoadingAnimation';\nimport PIWASUpload from './PIWASUpload';\nimport PIEUpload from './PIEUpload';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst defaultFiles = {\n  caseSample: {\n    'AD001-FU4': 'AD311-FU4',\n    'AD002-FU4': 'AD015-FU4',\n    'AD003-FU4': 'AD033-FU4',\n    'AD004-FU4': 'AD055-FU4',\n    'AD006-FU4': 'AD012-FU4',\n    'AD007-FU4': 'AD043-FU4',\n    'AD011-FU4': 'AD308-FU4',\n    'AD016-FU4': 'AD005-FU4',\n    'AD022-FU4': 'AD024-FU4',\n    // 'AD028-FU4': 'AD037-FU4', 028 not provide\n    'AD035-FU4': 'AD056-FU4',\n    'AD042-FU4': 'AD301-FU4',\n    'AD044-FU4': 'AD079-FU4',\n    'AD053-FU4': 'AD025-FU4',\n    'AD058-FU4': 'AD021-FU4',\n    'AD077-FU4': 'AD013-FU4',\n    'AD302-FU4': 'AD067-FU4',\n    // 'AD303-FU4': 'AD031-FU4', 031 not provide\n    'AD304-FU4': 'AD051-FU4',\n    'AD306-FU4': 'AD040-FU4',\n    'AD309-FU4': 'AD059-FU4',\n    'AD312-FU4': 'AD072-FU4',\n    'AD313-FU4': 'AD073-FU4',\n    'AD315-FU4': 'AD052-FU4',\n    'AD316-FU4': 'AD054-FU4',\n    'AD318-FU4': 'AD325-FU4',\n    'AD319-FU4': 'AD046-FU4',\n    'AD320-FU4': 'AD029-FU4',\n    'AD322-FU4': 'AD321-FU4',\n    'AD323-FU4': 'AD023-FU4',\n    'AD324-FU4': 'AD081-FU4'\n  },\n  proteinSequence: ['P0DTC9']\n};\nconst Pipeline = () => {\n  _s();\n  const {\n    token\n  } = useAuth(); // 从AuthContext获取Token\n  const [algorithm, setAlgorithm] = useState(''); // 算法\n  const [files, setFiles] = useState({\n    caseSample: [],\n    controlSample: [],\n    proteinSequence: [],\n    piwasResult: []\n  }); //文件\n  const [fileSources, setFileSources] = useState({\n    caseControlSample: 'local',\n    proteinSequence: 'local',\n    piwasResult: 'local'\n  });\n  const [uploadedFiles, setUploadedFiles] = useState([]);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [running, setRunning] = useState(false);\n  const [processedFile, setProcessedFile] = useState(null);\n\n  // 算法改变\n  const handleAlgorithmChange = event => {\n    setAlgorithm(event.target.value);\n    setFiles({\n      caseSample: [],\n      controlSample: [],\n      proteinSequence: []\n    });\n    setFileSources({\n      caseControlSample: 'local',\n      caseSample: 'local',\n      controlSample: 'local',\n      proteinSequence: 'local'\n    });\n    setUploadedFiles([]);\n    setErrorMessage('');\n    setRunning(false);\n    setProcessedFile(null);\n  };\n\n  // 处理用户选择的文件，并将其更新到组件的状态中。用户可以选择多个文件并将其添加到指定的文件列表中，同时确保文件不会重复添加。\n  const handleFileChange = event => {\n    const {\n      name,\n      files: selectedFiles\n    } = event.target;\n    const updatedFiles = {\n      ...files,\n      [name]: [...files[name], ...Array.from(selectedFiles)]\n    };\n    setFiles(updatedFiles);\n    setUploadedFiles(prev => {\n      const filteredFiles = prev.filter(f => {\n        var _files$name;\n        return !((_files$name = files[name]) !== null && _files$name !== void 0 && _files$name.includes(f));\n      });\n      return [...filteredFiles, ...Array.from(selectedFiles)];\n    });\n    // console.log(\"file change\")\n  };\n\n  // 处理选择的默认文件，并将其更新到组件的状态中。这样，当用户选择一个默认文件时，\n  // 文件状态和已上传文件列表都会相应地更新，同时 caseSample 和 controlSample 文件会同步更新。\n  const handleDefaultFileSelect = (name, file) => {\n    let updatedFiles;\n    // case/control 文件选择\n    if (name === 'caseSample') {\n      updatedFiles = {\n        ...files,\n        [name]: [file],\n        controlSample: [defaultFiles.caseSample[file]]\n      };\n    } else {\n      updatedFiles = {\n        ...files,\n        [name]: [file]\n      }; // 蛋白质文件选择\n    }\n    setFiles(updatedFiles);\n    setUploadedFiles(prev => [...prev, ...updatedFiles[name]]);\n    console.log('Updated files after selecting default file:', updatedFiles);\n    // console.log(files);\n  };\n\n  // 文件来源\n  const handleFileSourceChange = (event, fileType) => {\n    const value = event.target.value;\n    console.log(\"begin\", fileSources);\n    console.log(`Changing file source for ${fileType} to ${value}`);\n    setFileSources(prev => ({\n      ...prev,\n      [fileType]: value\n    }));\n\n    // 清空文件列表\n    if (fileType === 'caseControlSample') {\n      setFiles(prev => ({\n        ...prev,\n        caseSample: [],\n        controlSample: []\n      }));\n    } else if (fileType === 'proteinSequence') {\n      setFiles(prev => ({\n        ...prev,\n        proteinSequence: []\n      }));\n    }\n    console.log(fileSources);\n  };\n  const downloadFile = async filePath => {\n    try {\n      const response = await axios.get('http://localhost:8000/api/download-result-file/', {\n        params: {\n          file_path: filePath\n        },\n        headers: {\n          'Authorization': `Bearer ${token}`\n        },\n        responseType: 'blob'\n      });\n      const url = window.URL.createObjectURL(new Blob([response.data]));\n      const link = document.createElement('a');\n      link.href = url;\n      link.setAttribute('download', filePath.split('/').pop());\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n    } catch (error) {\n      setErrorMessage('Error downloading file: ' + error.message);\n    }\n  };\n\n  // 用于上传文件，支持上传单个/多个文件\n  const uploadFiles = async (url, files, fieldName) => {\n    const formData = new FormData();\n\n    // 判断 files 是数组还是单个文件\n    if (Array.isArray(files)) {\n      // 如果是数组，将每个文件添加到 FormData\n      files.forEach(file => formData.append(fieldName, file));\n    } else {\n      // 如果是单个文件，直接添加到 FormData\n      formData.append(fieldName, files);\n    }\n    try {\n      const response = await axios.post(url, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n          'Authorization': `Bearer ${token}` // 在请求头中包含Token\n        }\n      });\n\n      // 根据响应数据的结构处理返回值\n      if (Array.isArray(files)) {\n        console.log(`Successfully uploaded files to ${url}:`, response.data.file_paths);\n        return response.data.file_paths;\n      } else {\n        console.log(`Successfully uploaded file to ${url}:`, response.data.file_path);\n        return response.data.file_path;\n      }\n    } catch (error) {\n      console.error(`Error uploading file(s) to ${url}:`, error);\n      throw error;\n    }\n  };\n\n  // 上传default文件\n  const uploadDefaultFiles = async (url, caseFolder, controlFolder) => {\n    try {\n      const response = await axios.post(url, {\n        case_folder: caseFolder,\n        control_folder: controlFolder\n      }, {\n        headers: {\n          'Authorization': `Bearer ${token}` // 在请求头中包含Token\n        }\n      });\n      console.log(`Successfully processed file pair for ${caseFolder} and ${controlFolder}:`, response.data);\n      return response.data;\n    } catch (error) {\n      console.error(`Error processing file pair for ${caseFolder} and ${controlFolder}:`, error);\n      throw error;\n    }\n  };\n  const uploadDefaultProteinFile = async (url, proteinFolder) => {\n    try {\n      const response = await axios.post(url, {\n        protein_folder: proteinFolder\n      }, {\n        headers: {\n          'Authorization': `Bearer ${token}` // 在请求头中包含Token\n        }\n      });\n      console.log(`Successfully processed protein folder ${proteinFolder}:`, response.data);\n      return response.data;\n    } catch (error) {\n      console.error(`Error processing protein folder ${proteinFolder}:`, error);\n      throw error;\n    }\n  };\n  const handleRun = async () => {\n    console.log(fileSources);\n    if (!algorithm) {\n      setErrorMessage('You must select an algorithm.');\n      return;\n    }\n    setErrorMessage('');\n    setRunning(true);\n    try {\n      let runResponse, caseFilePaths, controlFilePaths, proteinFilePath;\n\n      // protein sequence\n      //check\n      if (files.proteinSequence.length !== 1) {\n        setErrorMessage('You must submit exactly one protein sequence file.');\n        return;\n      }\n      //upload\n      if (fileSources.proteinSequence === 'local') {\n        proteinFilePath = await uploadFiles('http://localhost:8000/api/upload-protein-file/', files.proteinSequence[0], 'protein_file');\n      } else {\n        proteinFilePath = defaultFiles.proteinSequence[0];\n      }\n      if (algorithm === 'PIWAS' || algorithm === 'PIWAS+PIE') {\n        console.log(fileSources.caseControlSample);\n        if (fileSources.caseControlSample === \"local\") {\n          if (files.caseSample.length !== 2) {\n            setErrorMessage('You must submit exactly two case sample files (5-mer and 6-mer).');\n            return;\n          }\n          if (files.controlSample.length !== 2) {\n            setErrorMessage('You must submit exactly two control sample files (5-mer and 6-mer).');\n            return;\n          }\n          caseFilePaths = await uploadFiles('http://localhost:8000/api/upload-case-files/', files.caseSample, 'case_files');\n          controlFilePaths = await uploadFiles('http://localhost:8000/api/upload-control-files/', files.controlSample, 'control_files');\n          if (!proteinFilePath) {\n            setErrorMessage('Error uploading protein sequence file.');\n            return;\n          }\n        } else {\n          if (files.caseSample.length !== 1) {\n            setErrorMessage('You must select one default file pair.');\n            return;\n          }\n          console.log(files.caseSample[0], files.controlSample[0]);\n          const caseControlPaths = await uploadDefaultFiles('http://localhost:8000/api/process-file-pair/', files.caseSample[0], files.controlSample[0]);\n          caseFilePaths = caseControlPaths.case_file_paths;\n          controlFilePaths = caseControlPaths.control_file_paths;\n        }\n        console.log(\"Return\", caseFilePaths, controlFilePaths);\n        const requestBody = {\n          case_file_paths: {\n            kmer_5: caseFilePaths.find(path => path.includes('5')),\n            kmer_6: caseFilePaths.find(path => path.includes('6'))\n          },\n          control_file_paths: {\n            kmer_5: controlFilePaths.find(path => path.includes('5')),\n            kmer_6: controlFilePaths.find(path => path.includes('6'))\n          },\n          protein_file_path: proteinFilePath\n        };\n        console.log(requestBody);\n        runResponse = await axios.post(`http://localhost:8000/api/run-${algorithm.toLowerCase()}-algorithm/`, requestBody, {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          },\n          timeout: 600000\n        });\n      } else if (algorithm === 'PIE') {\n        if (fileSources.piwasResult === 'local' && files.piwasResult.length !== 2) {\n          setErrorMessage('You must submit exactly two PIWAS result files (case result and control result).');\n          return;\n        }\n        let piwasCaseFilePath, piwasControlFilePath;\n        if (fileSources.piwasResult === 'local') {\n          const piwasResultPaths = await uploadFiles('http://localhost:8000/api/upload-piwas-results/', files.piwasResult, 'piwas_result_files');\n          if (!piwasResultPaths || piwasResultPaths.length < 2) {\n            setErrorMessage('Error uploading PIWAS result files.');\n            return;\n          }\n          piwasCaseFilePath = piwasResultPaths.find(path => path.includes('case'));\n          piwasControlFilePath = piwasResultPaths.find(path => path.includes('control'));\n        } else {\n          piwasCaseFilePath = defaultFiles.piwasResult.find(file => file.includes('case'));\n          piwasControlFilePath = defaultFiles.piwasResult.find(file => file.includes('control'));\n        }\n        runResponse = await axios.post('http://localhost:8000/api/run-pie-algorithm/', {\n          piwas_case_file_path: piwasCaseFilePath,\n          piwas_control_file_path: piwasControlFilePath,\n          protein_file_path: proteinFilePath\n        }, {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          },\n          timeout: 600000\n        });\n      }\n      if (runResponse.data.status === 'success') {\n        setProcessedFile(runResponse.data.file_paths);\n      } else {\n        setErrorMessage(runResponse.data.message);\n      }\n    } catch (error) {\n      setErrorMessage('Error running pipeline: ' + error.message);\n    } finally {\n      setRunning(false);\n    }\n  };\n  const handleReset = () => {\n    setAlgorithm('');\n    setFiles({\n      caseSample: [],\n      controlSample: [],\n      proteinSequence: [],\n      piwasResult: []\n    });\n    setFileSources({\n      caseSample: 'local',\n      controlSample: 'local',\n      proteinSequence: 'local'\n    });\n    setUploadedFiles([]);\n    setErrorMessage('');\n    setRunning(false);\n    setProcessedFile(null);\n  };\n  const handleFileDelete = (fileType, index) => {\n    const updatedFiles = {\n      ...files,\n      [fileType]: files[fileType].filter((_, i) => i !== index)\n    };\n    setFiles(updatedFiles);\n    setUploadedFiles(uploadedFiles.filter((file, i) => {\n      // 确保删除正确的文件类型\n      const isCorrectFileType = Object.keys(files).some(key => files[key].includes(file) && key === fileType);\n      return i !== index || !isCorrectFileType;\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      component: \"main\",\n      maxWidth: \"md\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          marginTop: 8,\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center'\n        },\n        children: [!running && !processedFile && /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mt: 3,\n            mb: 5,\n            width: '100%'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Paper, {\n            elevation: 3,\n            sx: {\n              p: 3,\n              backgroundColor: '#ffffff',\n              mb: 5,\n              position: 'relative',\n              border: '1px solid #ccc'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              sx: {\n                position: 'absolute',\n                top: -20,\n                left: 16,\n                backgroundColor: '#ffffff',\n                px: 1\n              },\n              children: \"Algorithm Selection\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 384,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              fullWidth: true,\n              value: algorithm,\n              onChange: handleAlgorithmChange,\n              displayEmpty: true,\n              sx: {\n                mt: 3,\n                mb: 3,\n                height: 50\n              },\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"\",\n                disabled: true,\n                children: \"Select an algorithm\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 394,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"PIWAS\",\n                children: \"PIWAS\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 395,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"PIE\",\n                children: \"PIE\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 396,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"PIWAS+PIE\",\n                children: \"PIWAS+PIE\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 397,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 387,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 383,\n            columnNumber: 15\n          }, this), algorithm && /*#__PURE__*/_jsxDEV(Paper, {\n            elevation: 3,\n            sx: {\n              p: 3,\n              backgroundColor: '#ffffff',\n              mb: 5,\n              position: 'relative',\n              border: '1px solid #ccc'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              sx: {\n                position: 'absolute',\n                top: -20,\n                left: 16,\n                backgroundColor: '#ffffff',\n                px: 1\n              },\n              children: algorithm === 'PIE' ? 'Upload PIWAS Results and Protein Sequence' : 'Upload Files'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 403,\n              columnNumber: 19\n            }, this), algorithm === 'PIE' ? /*#__PURE__*/_jsxDEV(PIEUpload, {\n              fileSources: fileSources,\n              handleFileSourceChange: handleFileSourceChange,\n              files: files,\n              handleFileChange: handleFileChange,\n              handleFileDelete: handleFileDelete,\n              handleDefaultFileSelect: handleDefaultFileSelect,\n              defaultFiles: defaultFiles\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 407,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(PIWASUpload, {\n              fileSources: fileSources,\n              handleFileSourceChange: handleFileSourceChange,\n              files: files,\n              handleFileChange: handleFileChange,\n              handleFileDelete: handleFileDelete,\n              handleDefaultFileSelect: handleDefaultFileSelect,\n              defaultFiles: defaultFiles\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 417,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 402,\n            columnNumber: 17\n          }, this), errorMessage && /*#__PURE__*/_jsxDEV(Alert, {\n            severity: \"error\",\n            children: errorMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 430,\n            columnNumber: 32\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mt: 3,\n              display: 'flex',\n              justifyContent: 'space-between'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"primary\",\n              onClick: handleRun,\n              children: \"Run\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 432,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              color: \"secondary\",\n              onClick: handleReset,\n              children: \"Reset\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 435,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 431,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 13\n        }, this), running && /*#__PURE__*/_jsxDEV(LoadingAnimation, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 23\n        }, this), processedFile && /*#__PURE__*/_jsxDEV(ProcessedResult, {\n          processedFile: processedFile,\n          downloadFile: downloadFile,\n          handleReset: handleReset,\n          algorithm: algorithm\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 445,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Pipeline, \"hs5uhPjMHh3sqFN84Jin/O69iGk=\", false, function () {\n  return [useAuth];\n});\n_c = Pipeline;\nexport default Pipeline;\nvar _c;\n$RefreshReg$(_c, \"Pipeline\");","map":{"version":3,"names":["React","useState","Container","Box","Typography","Select","MenuItem","Button","Paper","Alert","NavBar","axios","useAuth","ProcessedResult","LoadingAnimation","PIWASUpload","PIEUpload","jsxDEV","_jsxDEV","Fragment","_Fragment","defaultFiles","caseSample","proteinSequence","Pipeline","_s","token","algorithm","setAlgorithm","files","setFiles","controlSample","piwasResult","fileSources","setFileSources","caseControlSample","uploadedFiles","setUploadedFiles","errorMessage","setErrorMessage","running","setRunning","processedFile","setProcessedFile","handleAlgorithmChange","event","target","value","handleFileChange","name","selectedFiles","updatedFiles","Array","from","prev","filteredFiles","filter","f","_files$name","includes","handleDefaultFileSelect","file","console","log","handleFileSourceChange","fileType","downloadFile","filePath","response","get","params","file_path","headers","responseType","url","window","URL","createObjectURL","Blob","data","link","document","createElement","href","setAttribute","split","pop","body","appendChild","click","removeChild","error","message","uploadFiles","fieldName","formData","FormData","isArray","forEach","append","post","file_paths","uploadDefaultFiles","caseFolder","controlFolder","case_folder","control_folder","uploadDefaultProteinFile","proteinFolder","protein_folder","handleRun","runResponse","caseFilePaths","controlFilePaths","proteinFilePath","length","caseControlPaths","case_file_paths","control_file_paths","requestBody","kmer_5","find","path","kmer_6","protein_file_path","toLowerCase","timeout","piwasCaseFilePath","piwasControlFilePath","piwasResultPaths","piwas_case_file_path","piwas_control_file_path","status","handleReset","handleFileDelete","index","_","i","isCorrectFileType","Object","keys","some","key","children","fileName","_jsxFileName","lineNumber","columnNumber","component","maxWidth","sx","marginTop","display","flexDirection","alignItems","mt","mb","width","elevation","p","backgroundColor","position","border","variant","top","left","px","fullWidth","onChange","displayEmpty","height","disabled","severity","justifyContent","color","onClick","_c","$RefreshReg$"],"sources":["/Users/wenjing/Desktop/COMP9900/capstone-project-9900f14bravo/project/frontend/src/compoment/Pipeline.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Container, Box, Typography, Select, MenuItem, Button, Paper, Alert } from '@mui/material';\nimport NavBar from './NavBar';\nimport axios from 'axios';\nimport { useAuth } from '../AuthContext';\nimport ProcessedResult from './ProcessedResult';\nimport LoadingAnimation from './LoadingAnimation'; \nimport PIWASUpload from './PIWASUpload';\nimport PIEUpload from './PIEUpload';\n\nconst defaultFiles = {\n  caseSample: {\n    'AD001-FU4': 'AD311-FU4',\n    'AD002-FU4': 'AD015-FU4',\n    'AD003-FU4': 'AD033-FU4',\n    'AD004-FU4': 'AD055-FU4',\n    'AD006-FU4': 'AD012-FU4',\n    'AD007-FU4': 'AD043-FU4',\n    'AD011-FU4': 'AD308-FU4',\n    'AD016-FU4': 'AD005-FU4',\n    'AD022-FU4': 'AD024-FU4',\n    // 'AD028-FU4': 'AD037-FU4', 028 not provide\n    'AD035-FU4': 'AD056-FU4',\n    'AD042-FU4': 'AD301-FU4',\n    'AD044-FU4': 'AD079-FU4',\n    'AD053-FU4': 'AD025-FU4',\n    'AD058-FU4': 'AD021-FU4',\n    'AD077-FU4': 'AD013-FU4',\n    'AD302-FU4': 'AD067-FU4',\n    // 'AD303-FU4': 'AD031-FU4', 031 not provide\n    'AD304-FU4': 'AD051-FU4',\n    'AD306-FU4': 'AD040-FU4',\n    'AD309-FU4': 'AD059-FU4',\n    'AD312-FU4': 'AD072-FU4',\n    'AD313-FU4': 'AD073-FU4',\n    'AD315-FU4': 'AD052-FU4',\n    'AD316-FU4': 'AD054-FU4',\n    'AD318-FU4': 'AD325-FU4',\n    'AD319-FU4': 'AD046-FU4',\n    'AD320-FU4': 'AD029-FU4',\n    'AD322-FU4': 'AD321-FU4',\n    'AD323-FU4': 'AD023-FU4',\n    'AD324-FU4': 'AD081-FU4'\n  },\n  proteinSequence: ['P0DTC9'],\n};\n\nconst Pipeline = () => {\n  const { token } = useAuth(); // 从AuthContext获取Token\n  const [algorithm, setAlgorithm] = useState(''); // 算法\n  const [files, setFiles] = useState({\n    caseSample: [],\n    controlSample: [],\n    proteinSequence: [],\n    piwasResult: [],\n  }); //文件\n  const [fileSources, setFileSources] = useState({\n    caseControlSample: 'local',\n    proteinSequence: 'local',\n    piwasResult: 'local',\n  }); \n  const [uploadedFiles, setUploadedFiles] = useState([]); \n  const [errorMessage, setErrorMessage] = useState('');\n  const [running, setRunning] = useState(false);\n  const [processedFile, setProcessedFile] = useState(null);\n\n  // 算法改变\n  const handleAlgorithmChange = (event) => {\n    setAlgorithm(event.target.value);\n    setFiles({\n      caseSample: [],\n      controlSample: [],\n      proteinSequence: [],\n    });\n    setFileSources({\n      caseControlSample: 'local',\n      caseSample: 'local',\n      controlSample: 'local',\n      proteinSequence: 'local',\n    });\n    setUploadedFiles([]);\n    setErrorMessage('');\n    setRunning(false);\n    setProcessedFile(null);\n  };\n\n  // 处理用户选择的文件，并将其更新到组件的状态中。用户可以选择多个文件并将其添加到指定的文件列表中，同时确保文件不会重复添加。\n  const handleFileChange = (event) => {\n    const { name, files: selectedFiles } = event.target;\n    const updatedFiles = { ...files, [name]: [...files[name], ...Array.from(selectedFiles)] };\n    setFiles(updatedFiles);\n    setUploadedFiles((prev) => {\n      const filteredFiles = prev.filter(f => !files[name]?.includes(f));\n      return [...filteredFiles, ...Array.from(selectedFiles)];\n    });\n    // console.log(\"file change\")\n  };\n\n  // 处理选择的默认文件，并将其更新到组件的状态中。这样，当用户选择一个默认文件时，\n  // 文件状态和已上传文件列表都会相应地更新，同时 caseSample 和 controlSample 文件会同步更新。\n  const handleDefaultFileSelect = (name, file) => {\n    let updatedFiles;\n    // case/control 文件选择\n    if (name === 'caseSample') {\n      updatedFiles = { ...files, [name]: [file], controlSample: [defaultFiles.caseSample[file]] };\n    } else {\n      updatedFiles = { ...files, [name]: [file] }; // 蛋白质文件选择\n    }\n    setFiles(updatedFiles);\n    setUploadedFiles((prev) => [...prev, ...updatedFiles[name]]);\n    console.log('Updated files after selecting default file:', updatedFiles);\n    // console.log(files);\n  };\n\n  // 文件来源\n  const handleFileSourceChange = (event, fileType) => {\n    const value = event.target.value;\n    console.log(\"begin\",fileSources);\n    console.log(`Changing file source for ${fileType} to ${value}`)\n    setFileSources(prev => ({ ...prev, [fileType]: value }));\n  \n    // 清空文件列表\n    if (fileType === 'caseControlSample') {\n      setFiles(prev => ({ ...prev, caseSample: [], controlSample: [] }));\n    } else if (fileType === 'proteinSequence') {\n      setFiles(prev => ({ ...prev, proteinSequence: [] }));\n    }\n    console.log(fileSources);\n  };\n  \n  \n  const downloadFile = async (filePath) => {\n    try {\n      const response = await axios.get('http://localhost:8000/api/download-result-file/', {\n        params: { file_path: filePath },\n        headers: { 'Authorization': `Bearer ${token}` },\n        responseType: 'blob'\n      });\n\n      const url = window.URL.createObjectURL(new Blob([response.data]));\n      const link = document.createElement('a');\n      link.href = url;\n      link.setAttribute('download', filePath.split('/').pop());\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n    } catch (error) {\n      setErrorMessage('Error downloading file: ' + error.message);\n    }\n  };\n\n  // 用于上传文件，支持上传单个/多个文件\n  const uploadFiles = async (url, files, fieldName) => {\n    const formData = new FormData();\n  \n    // 判断 files 是数组还是单个文件\n    if (Array.isArray(files)) {\n      // 如果是数组，将每个文件添加到 FormData\n      files.forEach(file => formData.append(fieldName, file));\n    } else {\n      // 如果是单个文件，直接添加到 FormData\n      formData.append(fieldName, files);\n    }\n  \n    try {\n      const response = await axios.post(url, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n          'Authorization': `Bearer ${token}` // 在请求头中包含Token\n        }\n      });\n  \n      // 根据响应数据的结构处理返回值\n      if (Array.isArray(files)) {\n        console.log(`Successfully uploaded files to ${url}:`, response.data.file_paths);\n        return response.data.file_paths;\n      } else {\n        console.log(`Successfully uploaded file to ${url}:`, response.data.file_path);\n        return response.data.file_path;\n      }\n    } catch (error) {\n      console.error(`Error uploading file(s) to ${url}:`, error);\n      throw error;\n    }\n  };\n\n  // 上传default文件\n  const uploadDefaultFiles = async (url, caseFolder, controlFolder) => {\n    try {\n      const response = await axios.post(url, {\n        case_folder: caseFolder,\n        control_folder: controlFolder\n      }, {\n        headers: {\n          'Authorization': `Bearer ${token}` // 在请求头中包含Token\n        }\n      });\n  \n      console.log(`Successfully processed file pair for ${caseFolder} and ${controlFolder}:`, response.data);\n      return response.data;\n    } catch (error) {\n      console.error(`Error processing file pair for ${caseFolder} and ${controlFolder}:`, error);\n      throw error;\n    }\n  };\n\n  const uploadDefaultProteinFile = async (url, proteinFolder) => {\n    try {\n        const response = await axios.post(url, {\n            protein_folder: proteinFolder\n        }, {\n            headers: {\n                'Authorization': `Bearer ${token}` // 在请求头中包含Token\n            }\n        });\n\n        console.log(`Successfully processed protein folder ${proteinFolder}:`, response.data);\n        return response.data;\n    } catch (error) {\n        console.error(`Error processing protein folder ${proteinFolder}:`, error);\n        throw error;\n    }\n};\n\n  const handleRun = async () => {\n    console.log(fileSources);\n    if (!algorithm) {\n      setErrorMessage('You must select an algorithm.');\n      return;\n    }\n  \n    setErrorMessage('');\n    setRunning(true);\n  \n    try {\n      let runResponse, caseFilePaths, controlFilePaths, proteinFilePath;\n\n      // protein sequence\n      //check\n      if (files.proteinSequence.length !== 1) {\n        setErrorMessage('You must submit exactly one protein sequence file.');\n        return;\n      }\n      //upload\n      if (fileSources.proteinSequence === 'local'){\n        proteinFilePath = await uploadFiles('http://localhost:8000/api/upload-protein-file/', files.proteinSequence[0], 'protein_file');\n      } else {\n        proteinFilePath = defaultFiles.proteinSequence[0];\n      }\n      \n  \n      if (algorithm === 'PIWAS' || algorithm === 'PIWAS+PIE') {\n        console.log(fileSources.caseControlSample);\n        if (fileSources.caseControlSample === \"local\") {\n          if (files.caseSample.length !== 2) {\n            setErrorMessage('You must submit exactly two case sample files (5-mer and 6-mer).');\n            return;\n          }\n          if (files.controlSample.length !== 2) {\n            setErrorMessage('You must submit exactly two control sample files (5-mer and 6-mer).');\n            return;\n          }\n          \n    \n          caseFilePaths = await uploadFiles('http://localhost:8000/api/upload-case-files/', files.caseSample, 'case_files');\n          controlFilePaths = await uploadFiles('http://localhost:8000/api/upload-control-files/', files.controlSample, 'control_files');\n          \n          if (!proteinFilePath) {\n            setErrorMessage('Error uploading protein sequence file.');\n            return;\n          }\n        } else {\n          if (files.caseSample.length !== 1) {\n            setErrorMessage('You must select one default file pair.');\n            return;\n          }\n          console.log(files.caseSample[0], files.controlSample[0])\n          const caseControlPaths = await uploadDefaultFiles('http://localhost:8000/api/process-file-pair/',files.caseSample[0], files.controlSample[0]);\n          caseFilePaths = caseControlPaths.case_file_paths;\n          controlFilePaths = caseControlPaths.control_file_paths;\n        }\n\n        console.log(\"Return\",caseFilePaths,controlFilePaths);\n\n        const requestBody = {\n          case_file_paths: {\n            kmer_5: caseFilePaths.find(path => path.includes('5')),\n            kmer_6: caseFilePaths.find(path => path.includes('6')),\n          },\n          control_file_paths: {\n            kmer_5: controlFilePaths.find(path => path.includes('5')),\n            kmer_6: controlFilePaths.find(path => path.includes('6')),\n          },\n          protein_file_path: proteinFilePath\n        };\n\n        console.log(requestBody)\n  \n        runResponse = await axios.post(`http://localhost:8000/api/run-${algorithm.toLowerCase()}-algorithm/`, requestBody, {\n          headers: { 'Authorization': `Bearer ${token}` },\n          timeout: 600000\n        });\n      }\n  \n      else if (algorithm === 'PIE') {\n        if (fileSources.piwasResult === 'local' && files.piwasResult.length !== 2) {\n          setErrorMessage('You must submit exactly two PIWAS result files (case result and control result).');\n          return;\n        }\n  \n        let piwasCaseFilePath, piwasControlFilePath;\n        if (fileSources.piwasResult === 'local') {\n          const piwasResultPaths = await uploadFiles('http://localhost:8000/api/upload-piwas-results/', files.piwasResult, 'piwas_result_files');\n          if (!piwasResultPaths || piwasResultPaths.length < 2) {\n            setErrorMessage('Error uploading PIWAS result files.');\n            return;\n          }\n          piwasCaseFilePath = piwasResultPaths.find(path => path.includes('case'));\n          piwasControlFilePath = piwasResultPaths.find(path => path.includes('control'));\n        } else {\n          piwasCaseFilePath = defaultFiles.piwasResult.find(file => file.includes('case'));\n          piwasControlFilePath = defaultFiles.piwasResult.find(file => file.includes('control'));\n        }\n  \n        runResponse = await axios.post('http://localhost:8000/api/run-pie-algorithm/', {\n          piwas_case_file_path: piwasCaseFilePath,\n          piwas_control_file_path: piwasControlFilePath,\n          protein_file_path: proteinFilePath\n        }, {\n          headers: { 'Authorization': `Bearer ${token}` },\n          timeout: 600000\n        });\n      }\n  \n      if (runResponse.data.status === 'success') {\n        setProcessedFile(runResponse.data.file_paths);\n      } else {\n        setErrorMessage(runResponse.data.message);\n      }\n    } catch (error) {\n      setErrorMessage('Error running pipeline: ' + error.message);\n    } finally {\n      setRunning(false);\n    }\n  };\n\n  const handleReset = () => {\n    setAlgorithm('');\n    setFiles({\n      caseSample: [],\n      controlSample: [],\n      proteinSequence: [],\n      piwasResult: [],\n    });\n    setFileSources({\n      caseSample: 'local',\n      controlSample: 'local',\n      proteinSequence: 'local',\n    });\n    setUploadedFiles([]);\n    setErrorMessage('');\n    setRunning(false);\n    setProcessedFile(null);\n  };\n\n  const handleFileDelete = (fileType, index) => {\n    const updatedFiles = { ...files, [fileType]: files[fileType].filter((_, i) => i !== index) };\n    setFiles(updatedFiles);\n    setUploadedFiles(uploadedFiles.filter((file, i) => {\n      // 确保删除正确的文件类型\n      const isCorrectFileType = Object.keys(files).some(key => files[key].includes(file) && key === fileType);\n      return i !== index || !isCorrectFileType;\n    }));\n  };\n\n  return (\n    <>\n      <NavBar />\n      <Container component=\"main\" maxWidth=\"md\">\n        <Box sx={{ marginTop: 8, display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n          {!running && !processedFile && (\n            <Box sx={{ mt: 3, mb: 5, width: '100%' }}>\n              <Paper elevation={3} sx={{ p: 3, backgroundColor: '#ffffff', mb: 5, position: 'relative', border: '1px solid #ccc' }}>\n                <Typography variant=\"h6\" sx={{ position: 'absolute', top: -20, left: 16, backgroundColor: '#ffffff', px: 1 }}>\n                  Algorithm Selection\n                </Typography>\n                <Select\n                  fullWidth\n                  value={algorithm}\n                  onChange={handleAlgorithmChange}\n                  displayEmpty\n                  sx={{ mt: 3, mb: 3, height: 50 }}\n                >\n                  <MenuItem value=\"\" disabled>Select an algorithm</MenuItem>\n                  <MenuItem value=\"PIWAS\">PIWAS</MenuItem>\n                  <MenuItem value=\"PIE\">PIE</MenuItem>\n                  <MenuItem value=\"PIWAS+PIE\">PIWAS+PIE</MenuItem>\n                </Select>\n              </Paper>\n  \n              {algorithm && (\n                <Paper elevation={3} sx={{ p: 3, backgroundColor: '#ffffff', mb: 5, position: 'relative', border: '1px solid #ccc' }}>\n                  <Typography variant=\"h6\" sx={{ position: 'absolute', top: -20, left: 16, backgroundColor: '#ffffff', px: 1 }}>\n                    {algorithm === 'PIE' ? 'Upload PIWAS Results and Protein Sequence' : 'Upload Files'}\n                  </Typography>\n                  {algorithm === 'PIE' ? (\n                    <PIEUpload\n                      fileSources={fileSources}\n                      handleFileSourceChange={handleFileSourceChange}\n                      files={files}\n                      handleFileChange={handleFileChange}\n                      handleFileDelete={handleFileDelete}\n                      handleDefaultFileSelect={handleDefaultFileSelect}\n                      defaultFiles={defaultFiles}\n                    />\n                  ) : (\n                    <PIWASUpload\n                      fileSources={fileSources}\n                      handleFileSourceChange={handleFileSourceChange}\n                      files={files}\n                      handleFileChange={handleFileChange}\n                      handleFileDelete={handleFileDelete}\n                      handleDefaultFileSelect={handleDefaultFileSelect}\n                      defaultFiles={defaultFiles}\n                    />\n                  )}\n                </Paper>\n              )}\n  \n              {errorMessage && <Alert severity=\"error\">{errorMessage}</Alert>}\n              <Box sx={{ mt: 3, display: 'flex', justifyContent: 'space-between' }}>\n                <Button variant=\"contained\" color=\"primary\" onClick={handleRun}>\n                  Run\n                </Button>\n                <Button variant=\"outlined\" color=\"secondary\" onClick={handleReset}>\n                  Reset\n                </Button>\n              </Box>\n            </Box>\n          )}\n  \n          {running && <LoadingAnimation />}\n  \n          {processedFile && (\n            <ProcessedResult\n              processedFile={processedFile}\n              downloadFile={downloadFile}\n              handleReset={handleReset}\n              algorithm={algorithm}\n            />\n          )}\n        </Box>\n      </Container>\n    </>\n  );\n};\n\nexport default Pipeline;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}