{"ast":null,"code":"var _jsxFileName = \"/Users/wenjing/Desktop/COMP9900/capstone-project-9900f14bravo/project/frontend/src/compoment/Pipeline.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Container, Box, Typography, Select, MenuItem, Button, Paper, Alert } from '@mui/material';\nimport NavBar from './NavBar';\nimport axios from 'axios';\nimport { useAuth } from '../AuthContext';\nimport ProcessedResult from './ProcessedResult';\nimport LoadingAnimation from './LoadingAnimation';\nimport PIWASUpload from './PIWASUpload';\nimport PIEUpload from './PIEUpload';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst defaultFiles = {\n  caseSample: {\n    'AD001-FU4': 'AD311-FU4',\n    'AD002-FU4': 'AD015-FU4',\n    'AD003-FU4': 'AD033-FU4',\n    'AD004-FU4': 'AD055-FU4',\n    'AD006-FU4': 'AD012-FU4',\n    'AD007-FU4': 'AD043-FU4',\n    'AD011-FU4': 'AD308-FU4',\n    'AD016-FU4': 'AD005-FU4',\n    'AD022-FU4': 'AD024-FU4',\n    'AD028-FU4': 'AD037-FU4',\n    'AD035-FU4': 'AD056-FU4',\n    'AD042': 'AD-301',\n    'AD044': 'AD-079',\n    'AD053': 'AD-025',\n    'AD058': 'AD-021',\n    'AD077': 'AD-013',\n    'AD302': 'AD-067',\n    'AD-303': 'AD-031',\n    'AD-304': 'AD-051',\n    'AD-306': 'AD-040',\n    'AD-309': 'AD-059',\n    'AD-312': 'AD-072',\n    'AD-313': 'AD-073',\n    'AD-315': 'AD-052',\n    'AD-316': 'AD-054',\n    'AD-318': 'AD-325',\n    'AD-319': 'AD-046',\n    'AD-320': 'AD-029',\n    'AD-322': 'AD-321',\n    'AD-323': 'AD-023',\n    'AD-324': 'AD-081'\n  },\n  proteinSequence: ['default_protein_sequence_1', 'default_protein_sequence_2'],\n  piwasResult: ['default_piwas_case_result', 'default_piwas_control_result']\n};\nconst defaultFilesPath = {\n  caseSample: {\n    'AD-001': {\n      '5k': './default-files/kmer_5-AD001-FU4.csv',\n      '6k': './default-files/kmer_6-AD001-FU4.csv'\n    },\n    'AD-002': {\n      '5k': '/default-files/AD002-5k.csv',\n      '6k': '/default-files/AD002-6k.csv'\n    }\n    // ... 其他case文件路径\n  },\n  controlSample: {\n    'AD-311': {\n      '5k': './default-files/kmer_5-AD311-FU4.csv',\n      '6k': './default-files/kmer_6-AD311-FU4.csv'\n    },\n    'AD-312': {\n      '5k': '/default-files/AD312-5k.csv',\n      '6k': '/default-files/AD312-6k.csv'\n    }\n    // ... 其他control文件路径\n  },\n  proteinSequence: ['/default-files/P0DTC9.fasta', '/default-files/default_protein_sequence_2.csv'],\n  piwasResult: ['/default-files/default_piwas_case_result.csv', '/default-files/default_piwas_control_result.csv']\n};\nconst Pipeline = () => {\n  _s();\n  const {\n    token\n  } = useAuth(); // 从AuthContext获取Token\n  const [algorithm, setAlgorithm] = useState('');\n  const [files, setFiles] = useState({\n    caseSample: [],\n    controlSample: [],\n    proteinSequence: [],\n    piwasResult: []\n  });\n  const [fileSources, setFileSources] = useState({\n    caseControlSample: 'local',\n    proteinSequence: 'local',\n    piwasResult: 'local'\n  });\n  const [uploadedFiles, setUploadedFiles] = useState([]);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [running, setRunning] = useState(false);\n  const [processedFile, setProcessedFile] = useState(null);\n  const handleAlgorithmChange = event => {\n    setAlgorithm(event.target.value);\n  };\n  const handleFileChange = event => {\n    const {\n      name,\n      files: selectedFiles\n    } = event.target;\n    const updatedFiles = {\n      ...files,\n      [name]: [...files[name], ...Array.from(selectedFiles)]\n    };\n    setFiles(updatedFiles);\n    setUploadedFiles(prev => {\n      const filteredFiles = prev.filter(f => {\n        var _files$name;\n        return !((_files$name = files[name]) !== null && _files$name !== void 0 && _files$name.includes(f));\n      });\n      return [...filteredFiles, ...Array.from(selectedFiles)];\n    });\n  };\n  const handleDefaultFileSelect = (name, file) => {\n    let updatedFiles;\n    if (name === 'caseSample') {\n      updatedFiles = {\n        ...files,\n        [name]: [file],\n        controlSample: [defaultFiles.caseSample[file]]\n      };\n    } else {\n      updatedFiles = {\n        ...files,\n        [name]: [file]\n      };\n    }\n    setFiles(updatedFiles);\n    setUploadedFiles(prev => [...prev, ...updatedFiles[name]]);\n    console.log('Updated files after selecting default file:', updatedFiles);\n    // console.log(files);\n  };\n  const handleFileSourceChange = (event, fileType) => {\n    const value = event.target.value;\n    setFileSources(prev => ({\n      ...prev,\n      [fileType]: value\n    }));\n\n    // 清空文件列表\n    if (fileType === 'caseControlSample') {\n      setFiles(prev => ({\n        ...prev,\n        caseSample: [],\n        controlSample: []\n      }));\n    } else if (fileType === 'proteinSequence') {\n      setFiles(prev => ({\n        ...prev,\n        proteinSequence: []\n      }));\n    }\n  };\n  const downloadFile = async filePath => {\n    try {\n      const response = await axios.get('http://localhost:8000/api/download-result-file/', {\n        params: {\n          file_path: filePath\n        },\n        headers: {\n          'Authorization': `Bearer ${token}`\n        },\n        responseType: 'blob'\n      });\n      const url = window.URL.createObjectURL(new Blob([response.data]));\n      const link = document.createElement('a');\n      link.href = url;\n      link.setAttribute('download', filePath.split('/').pop());\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n    } catch (error) {\n      setErrorMessage('Error downloading file: ' + error.message);\n    }\n  };\n  const handleRun = async () => {\n    if (!algorithm) {\n      setErrorMessage('You must select an algorithm.');\n      return;\n    }\n    setErrorMessage('');\n    setRunning(true);\n    try {\n      let runResponse;\n      const uploadFiles = async (url, files, fieldName) => {\n        const formData = new FormData();\n        for (let file of files) {\n          const fileData = typeof file === 'string' ? await fetchDefaultFile(file) : file;\n          formData.append(fieldName, fileData);\n        }\n        console.log(`Uploading files to ${url}:`, files); // Log files before upload\n        try {\n          const response = await axios.post(url, formData, {\n            headers: {\n              'Content-Type': 'multipart/form-data',\n              'Authorization': `Bearer ${token}` // 在请求头中包含Token\n            }\n          });\n          console.log(`Successfully uploaded files to ${url}:`, response.data.file_paths);\n          return response.data.file_paths;\n        } catch (error) {\n          console.error(`Error uploading files to ${url}:`, error);\n          throw error;\n        }\n      };\n      const uploadSingleFile = async (url, file, fieldName) => {\n        const formData = new FormData();\n        const fileData = typeof file === 'string' ? await fetchDefaultFile(file) : file;\n        formData.append(fieldName, fileData);\n        console.log(`Uploading single file to ${url}:`, file); // Log single file before upload\n        try {\n          const response = await axios.post(url, formData, {\n            headers: {\n              'Content-Type': 'multipart/form-data',\n              'Authorization': `Bearer ${token}` // 在请求头中包含Token\n            }\n          });\n          console.log(`Successfully uploaded file to ${url}:`, response.data.file_path);\n          return response.data.file_path;\n        } catch (error) {\n          console.error(`Error uploading file to ${url}:`, error);\n          throw error;\n        }\n      };\n      const fetchDefaultFile = async url => {\n        const response = await fetch(url);\n        const blob = await response.blob();\n        return new File([blob], url.split('/').pop());\n      };\n      if (algorithm === 'PIWAS' || algorithm === 'PIWAS+PIE') {\n        let caseSampleFiles, controlSampleFiles, proteinFile;\n        if (fileSources.caseControlSample === 'local') {\n          caseSampleFiles = files.caseSample;\n          controlSampleFiles = files.controlSample;\n        } else {\n          const caseSampleKey = files.caseSample[0];\n          const controlSampleKey = files.controlSample[0];\n          console.log('Case sample key:', caseSampleKey);\n          console.log('Control sample key:', controlSampleKey);\n          console.log('Default case sample path:', defaultFilesPath.caseSample[caseSampleKey]);\n          console.log('Default control sample path:', defaultFilesPath.controlSample[controlSampleKey]);\n          if (!defaultFilesPath.caseSample[caseSampleKey] || !defaultFilesPath.controlSample[controlSampleKey]) {\n            setErrorMessage('Selected default files are not defined.');\n            setRunning(false);\n            return;\n          }\n          caseSampleFiles = [defaultFilesPath.caseSample[caseSampleKey]['5k'], defaultFilesPath.caseSample[caseSampleKey]['6k']];\n          controlSampleFiles = [defaultFilesPath.controlSample[controlSampleKey]['5k'], defaultFilesPath.controlSample[controlSampleKey]['6k']];\n        }\n        proteinFile = fileSources.proteinSequence === 'local' ? files.proteinSequence[0] : defaultFilesPath.proteinSequence[files.proteinSequence[0]];\n        console.log('Case sample files:', caseSampleFiles);\n        console.log('Control sample files:', controlSampleFiles);\n        console.log('Protein sequence file:', proteinFile);\n        if (caseSampleFiles.length !== 2 || !caseSampleFiles[0] || !caseSampleFiles[1]) {\n          setErrorMessage('You must submit exactly two case sample files (5-mer and 6-mer).');\n          setRunning(false);\n          return;\n        }\n        if (controlSampleFiles.length !== 2 || !controlSampleFiles[0] || !controlSampleFiles[1]) {\n          setErrorMessage('You must submit exactly two control sample files (5-mer and 6-mer).');\n          setRunning(false);\n          return;\n        }\n        if (!proteinFile) {\n          setErrorMessage('You must submit exactly one protein sequence file.');\n          setRunning(false);\n          return;\n        }\n        const caseFilePaths = await uploadFiles('http://localhost:8000/api/upload-case-files/', caseSampleFiles, 'case_files');\n        const controlFilePaths = await uploadFiles('http://localhost:8000/api/upload-control-files/', controlSampleFiles, 'control_files');\n        const proteinFilePath = await uploadSingleFile('http://localhost:8000/api/upload-protein-file/', proteinFile, 'protein_file');\n        if (!proteinFilePath) {\n          setErrorMessage('Error uploading protein sequence file.');\n          setRunning(false);\n          return;\n        }\n        const requestBody = {\n          case_file_paths: {\n            kmer_5: caseFilePaths.find(path => path.includes('5k')),\n            kmer_6: caseFilePaths.find(path => path.includes('6k'))\n          },\n          control_file_paths: {\n            kmer_5: controlFilePaths.find(path => path.includes('5k')),\n            kmer_6: controlFilePaths.find(path => path.includes('6k'))\n          },\n          protein_file_path: proteinFilePath\n        };\n        console.log('Request body for PIWAS or PIWAS+PIE:', requestBody);\n        if (algorithm === 'PIWAS+PIE') {\n          requestBody.piwas_case_file_path = requestBody.case_file_paths.kmer_5;\n          requestBody.piwas_control_file_path = requestBody.control_file_paths.kmer_6;\n        }\n        runResponse = await axios.post(`http://localhost:8000/api/run-${algorithm.toLowerCase()}-algorithm/`, requestBody, {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          },\n          timeout: 600000\n        });\n      } else if (algorithm === 'PIE') {\n        const piwasResultFiles = fileSources.piwasResult === 'local' ? files.piwasResult : defaultFilesPath.piwasResult;\n        const proteinFile = fileSources.proteinSequence === 'local' ? files.proteinSequence[0] : defaultFilesPath.proteinSequence[files.proteinSequence[0]];\n        console.log('PIWAS result files:', piwasResultFiles);\n        console.log('Protein sequence file:', proteinFile);\n        if (piwasResultFiles.length !== 2) {\n          setErrorMessage('You must submit exactly two PIWAS result files (case result and control result).');\n          return;\n        }\n        const piwasCaseFilePath = await uploadSingleFile('http://localhost:8000/api/upload-piwas-case-result/', piwasResultFiles[0], 'piwas_case_result');\n        const piwasControlFilePath = await uploadSingleFile('http://localhost:8000/api/upload-piwas-control-result/', piwasResultFiles[1], 'piwas_control_result');\n        const proteinFilePath = await uploadSingleFile('http://localhost:8000/api/upload-protein-file/', proteinFile, 'protein_file');\n        const requestBody = {\n          piwas_case_file_path: piwasCaseFilePath,\n          piwas_control_file_path: piwasControlFilePath,\n          protein_file_path: proteinFilePath\n        };\n        console.log('Request body for PIE:', requestBody);\n        runResponse = await axios.post('http://localhost:8000/api/run-pie-algorithm/', requestBody, {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          },\n          timeout: 600000\n        });\n      }\n      if (runResponse.data.status === 'success') {\n        setProcessedFile(runResponse.data.file_paths);\n      } else {\n        setErrorMessage(runResponse.data.message);\n      }\n    } catch (error) {\n      setErrorMessage('Error running pipeline: ' + error.message);\n    } finally {\n      setRunning(false);\n    }\n  };\n  const handleReset = () => {\n    setAlgorithm('');\n    setFiles({\n      caseSample: [],\n      controlSample: [],\n      proteinSequence: [],\n      piwasResult: []\n    });\n    setFileSources({\n      caseSample: 'local',\n      controlSample: 'local',\n      proteinSequence: 'local',\n      piwasResult: 'local'\n    });\n    setUploadedFiles([]);\n    setErrorMessage('');\n    setRunning(false);\n    setProcessedFile(null);\n  };\n  const handleFileDelete = (fileType, index) => {\n    const updatedFiles = {\n      ...files,\n      [fileType]: files[fileType].filter((_, i) => i !== index)\n    };\n    setFiles(updatedFiles);\n    setUploadedFiles(uploadedFiles.filter((file, i) => {\n      // 确保删除正确的文件类型\n      const isCorrectFileType = Object.keys(files).some(key => files[key].includes(file) && key === fileType);\n      return i !== index || !isCorrectFileType;\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      component: \"main\",\n      maxWidth: \"md\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          marginTop: 8,\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center'\n        },\n        children: [!running && !processedFile && /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mt: 3,\n            mb: 5,\n            width: '100%'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Paper, {\n            elevation: 3,\n            sx: {\n              p: 3,\n              backgroundColor: '#ffffff',\n              mb: 5,\n              position: 'relative',\n              border: '1px solid #ccc'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              sx: {\n                position: 'absolute',\n                top: -20,\n                left: 16,\n                backgroundColor: '#ffffff',\n                px: 1\n              },\n              children: \"Algorithm Selection\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 387,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              fullWidth: true,\n              value: algorithm,\n              onChange: handleAlgorithmChange,\n              displayEmpty: true,\n              sx: {\n                mt: 3,\n                mb: 3,\n                height: 50\n              },\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"\",\n                disabled: true,\n                children: \"Select an algorithm\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 397,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"PIWAS\",\n                children: \"PIWAS\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 398,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"PIE\",\n                children: \"PIE\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 399,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"PIWAS+PIE\",\n                children: \"PIWAS+PIE\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 400,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 390,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 386,\n            columnNumber: 15\n          }, this), algorithm && /*#__PURE__*/_jsxDEV(Paper, {\n            elevation: 3,\n            sx: {\n              p: 3,\n              backgroundColor: '#ffffff',\n              mb: 5,\n              position: 'relative',\n              border: '1px solid #ccc'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              sx: {\n                position: 'absolute',\n                top: -20,\n                left: 16,\n                backgroundColor: '#ffffff',\n                px: 1\n              },\n              children: algorithm === 'PIE' ? 'Upload PIWAS Results and Protein Sequence' : 'Upload Files'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 406,\n              columnNumber: 19\n            }, this), algorithm === 'PIE' ? /*#__PURE__*/_jsxDEV(PIEUpload, {\n              fileSources: fileSources,\n              handleFileSourceChange: handleFileSourceChange,\n              files: files,\n              handleFileChange: handleFileChange,\n              handleFileDelete: handleFileDelete,\n              handleDefaultFileSelect: handleDefaultFileSelect,\n              defaultFiles: defaultFiles\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 410,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(PIWASUpload, {\n              fileSources: fileSources,\n              handleFileSourceChange: handleFileSourceChange,\n              files: files,\n              handleFileChange: handleFileChange,\n              handleFileDelete: handleFileDelete,\n              handleDefaultFileSelect: handleDefaultFileSelect,\n              defaultFiles: defaultFiles\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 420,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 405,\n            columnNumber: 17\n          }, this), errorMessage && /*#__PURE__*/_jsxDEV(Alert, {\n            severity: \"error\",\n            children: errorMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 433,\n            columnNumber: 32\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mt: 3,\n              display: 'flex',\n              justifyContent: 'space-between'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"primary\",\n              onClick: handleRun,\n              children: \"Run\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 435,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              color: \"secondary\",\n              onClick: handleReset,\n              children: \"Reset\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 438,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 434,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 13\n        }, this), running && /*#__PURE__*/_jsxDEV(LoadingAnimation, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 445,\n          columnNumber: 23\n        }, this), processedFile && /*#__PURE__*/_jsxDEV(ProcessedResult, {\n          processedFile: processedFile,\n          downloadFile: downloadFile,\n          handleReset: handleReset,\n          algorithm: algorithm\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 448,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Pipeline, \"hs5uhPjMHh3sqFN84Jin/O69iGk=\", false, function () {\n  return [useAuth];\n});\n_c = Pipeline;\nexport default Pipeline;\nvar _c;\n$RefreshReg$(_c, \"Pipeline\");","map":{"version":3,"names":["React","useState","Container","Box","Typography","Select","MenuItem","Button","Paper","Alert","NavBar","axios","useAuth","ProcessedResult","LoadingAnimation","PIWASUpload","PIEUpload","jsxDEV","_jsxDEV","Fragment","_Fragment","defaultFiles","caseSample","proteinSequence","piwasResult","defaultFilesPath","controlSample","Pipeline","_s","token","algorithm","setAlgorithm","files","setFiles","fileSources","setFileSources","caseControlSample","uploadedFiles","setUploadedFiles","errorMessage","setErrorMessage","running","setRunning","processedFile","setProcessedFile","handleAlgorithmChange","event","target","value","handleFileChange","name","selectedFiles","updatedFiles","Array","from","prev","filteredFiles","filter","f","_files$name","includes","handleDefaultFileSelect","file","console","log","handleFileSourceChange","fileType","downloadFile","filePath","response","get","params","file_path","headers","responseType","url","window","URL","createObjectURL","Blob","data","link","document","createElement","href","setAttribute","split","pop","body","appendChild","click","removeChild","error","message","handleRun","runResponse","uploadFiles","fieldName","formData","FormData","fileData","fetchDefaultFile","append","post","file_paths","uploadSingleFile","fetch","blob","File","caseSampleFiles","controlSampleFiles","proteinFile","caseSampleKey","controlSampleKey","length","caseFilePaths","controlFilePaths","proteinFilePath","requestBody","case_file_paths","kmer_5","find","path","kmer_6","control_file_paths","protein_file_path","piwas_case_file_path","piwas_control_file_path","toLowerCase","timeout","piwasResultFiles","piwasCaseFilePath","piwasControlFilePath","status","handleReset","handleFileDelete","index","_","i","isCorrectFileType","Object","keys","some","key","children","fileName","_jsxFileName","lineNumber","columnNumber","component","maxWidth","sx","marginTop","display","flexDirection","alignItems","mt","mb","width","elevation","p","backgroundColor","position","border","variant","top","left","px","fullWidth","onChange","displayEmpty","height","disabled","severity","justifyContent","color","onClick","_c","$RefreshReg$"],"sources":["/Users/wenjing/Desktop/COMP9900/capstone-project-9900f14bravo/project/frontend/src/compoment/Pipeline.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Container, Box, Typography, Select, MenuItem, Button, Paper, Alert } from '@mui/material';\nimport NavBar from './NavBar';\nimport axios from 'axios';\nimport { useAuth } from '../AuthContext';\nimport ProcessedResult from './ProcessedResult';\nimport LoadingAnimation from './LoadingAnimation'; \nimport PIWASUpload from './PIWASUpload';\nimport PIEUpload from './PIEUpload';\n\nconst defaultFiles = {\n  caseSample: {\n    'AD001-FU4': 'AD311-FU4',\n    'AD002-FU4': 'AD015-FU4',\n    'AD003-FU4': 'AD033-FU4',\n    'AD004-FU4': 'AD055-FU4',\n    'AD006-FU4': 'AD012-FU4',\n    'AD007-FU4': 'AD043-FU4',\n    'AD011-FU4': 'AD308-FU4',\n    'AD016-FU4': 'AD005-FU4',\n    'AD022-FU4': 'AD024-FU4',\n    'AD028-FU4': 'AD037-FU4',\n    'AD035-FU4': 'AD056-FU4',\n    'AD042': 'AD-301',\n    'AD044': 'AD-079',\n    'AD053': 'AD-025',\n    'AD058': 'AD-021',\n    'AD077': 'AD-013',\n    'AD302': 'AD-067',\n    'AD-303': 'AD-031',\n    'AD-304': 'AD-051',\n    'AD-306': 'AD-040',\n    'AD-309': 'AD-059',\n    'AD-312': 'AD-072',\n    'AD-313': 'AD-073',\n    'AD-315': 'AD-052',\n    'AD-316': 'AD-054',\n    'AD-318': 'AD-325',\n    'AD-319': 'AD-046',\n    'AD-320': 'AD-029',\n    'AD-322': 'AD-321',\n    'AD-323': 'AD-023',\n    'AD-324': 'AD-081'\n  },\n  proteinSequence: ['default_protein_sequence_1', 'default_protein_sequence_2'],\n  piwasResult: ['default_piwas_case_result', 'default_piwas_control_result']\n};\n\nconst defaultFilesPath = {\n  caseSample: {\n    'AD-001': {\n      '5k': './default-files/kmer_5-AD001-FU4.csv',\n      '6k': './default-files/kmer_6-AD001-FU4.csv'\n    },\n    'AD-002': {\n      '5k': '/default-files/AD002-5k.csv',\n      '6k': '/default-files/AD002-6k.csv'\n    },\n    // ... 其他case文件路径\n  },\n  controlSample: {\n    'AD-311': {\n      '5k': './default-files/kmer_5-AD311-FU4.csv',\n      '6k': './default-files/kmer_6-AD311-FU4.csv'\n    },\n    'AD-312': {\n      '5k': '/default-files/AD312-5k.csv',\n      '6k': '/default-files/AD312-6k.csv'\n    },\n    // ... 其他control文件路径\n  },\n  proteinSequence: [\n    '/default-files/P0DTC9.fasta',\n    '/default-files/default_protein_sequence_2.csv'\n  ],\n  piwasResult: [\n    '/default-files/default_piwas_case_result.csv',\n    '/default-files/default_piwas_control_result.csv'\n  ],\n};\n\nconst Pipeline = () => {\n  const { token } = useAuth(); // 从AuthContext获取Token\n  const [algorithm, setAlgorithm] = useState('');\n  const [files, setFiles] = useState({\n    caseSample: [],\n    controlSample: [],\n    proteinSequence: [],\n    piwasResult: [],\n  });\n  const [fileSources, setFileSources] = useState({\n    caseControlSample: 'local',\n    proteinSequence: 'local',\n    piwasResult: 'local',\n  });\n  const [uploadedFiles, setUploadedFiles] = useState([]);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [running, setRunning] = useState(false);\n  const [processedFile, setProcessedFile] = useState(null);\n\n  const handleAlgorithmChange = (event) => {\n    setAlgorithm(event.target.value);\n  };\n\n  const handleFileChange = (event) => {\n    const { name, files: selectedFiles } = event.target;\n    const updatedFiles = { ...files, [name]: [...files[name], ...Array.from(selectedFiles)] };\n    setFiles(updatedFiles);\n    setUploadedFiles((prev) => {\n      const filteredFiles = prev.filter(f => !files[name]?.includes(f));\n      return [...filteredFiles, ...Array.from(selectedFiles)];\n    });\n  };\n\n  const handleDefaultFileSelect = (name, file) => {\n    let updatedFiles;\n    if (name === 'caseSample') {\n      updatedFiles = { ...files, [name]: [file], controlSample: [defaultFiles.caseSample[file]] };\n    } else {\n      updatedFiles = { ...files, [name]: [file] };\n    }\n    setFiles(updatedFiles);\n    setUploadedFiles((prev) => [...prev, ...updatedFiles[name]]);\n    console.log('Updated files after selecting default file:', updatedFiles);\n    // console.log(files);\n  };\n\n  const handleFileSourceChange = (event, fileType) => {\n    const value = event.target.value;\n    setFileSources(prev => ({ ...prev, [fileType]: value }));\n  \n    // 清空文件列表\n    if (fileType === 'caseControlSample') {\n      setFiles(prev => ({ ...prev, caseSample: [], controlSample: [] }));\n    } else if (fileType === 'proteinSequence') {\n      setFiles(prev => ({ ...prev, proteinSequence: [] }));\n    }\n  };\n  \n  const downloadFile = async (filePath) => {\n    try {\n      const response = await axios.get('http://localhost:8000/api/download-result-file/', {\n        params: { file_path: filePath },\n        headers: { 'Authorization': `Bearer ${token}` },\n        responseType: 'blob'\n      });\n\n      const url = window.URL.createObjectURL(new Blob([response.data]));\n      const link = document.createElement('a');\n      link.href = url;\n      link.setAttribute('download', filePath.split('/').pop());\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n    } catch (error) {\n      setErrorMessage('Error downloading file: ' + error.message);\n    }\n  };\n\n  const handleRun = async () => {\n  if (!algorithm) {\n    setErrorMessage('You must select an algorithm.');\n    return;\n  }\n\n  setErrorMessage('');\n  setRunning(true);\n\n  try {\n    let runResponse;\n\n    const uploadFiles = async (url, files, fieldName) => {\n      const formData = new FormData();\n      for (let file of files) {\n        const fileData = typeof file === 'string' ? await fetchDefaultFile(file) : file;\n        formData.append(fieldName, fileData);\n      }\n      console.log(`Uploading files to ${url}:`, files); // Log files before upload\n      try {\n        const response = await axios.post(url, formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data',\n            'Authorization': `Bearer ${token}` // 在请求头中包含Token\n          }\n        });\n        console.log(`Successfully uploaded files to ${url}:`, response.data.file_paths);\n        return response.data.file_paths;\n      } catch (error) {\n        console.error(`Error uploading files to ${url}:`, error);\n        throw error;\n      }\n    };\n\n    const uploadSingleFile = async (url, file, fieldName) => {\n      const formData = new FormData();\n      const fileData = typeof file === 'string' ? await fetchDefaultFile(file) : file;\n      formData.append(fieldName, fileData);\n      console.log(`Uploading single file to ${url}:`, file); // Log single file before upload\n      try {\n        const response = await axios.post(url, formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data',\n            'Authorization': `Bearer ${token}` // 在请求头中包含Token\n          }\n        });\n        console.log(`Successfully uploaded file to ${url}:`, response.data.file_path);\n        return response.data.file_path;\n      } catch (error) {\n        console.error(`Error uploading file to ${url}:`, error);\n        throw error;\n      }\n    };\n\n    const fetchDefaultFile = async (url) => {\n      const response = await fetch(url);\n      const blob = await response.blob();\n      return new File([blob], url.split('/').pop());\n    };\n\n    if (algorithm === 'PIWAS' || algorithm === 'PIWAS+PIE') {\n      let caseSampleFiles, controlSampleFiles, proteinFile;\n    \n      if (fileSources.caseControlSample === 'local') {\n        caseSampleFiles = files.caseSample;\n        controlSampleFiles = files.controlSample;\n      } else {\n        const caseSampleKey = files.caseSample[0];\n        const controlSampleKey = files.controlSample[0];\n\n\n        console.log('Case sample key:', caseSampleKey);\n        console.log('Control sample key:', controlSampleKey);\n        console.log('Default case sample path:', defaultFilesPath.caseSample[caseSampleKey]);\n        console.log('Default control sample path:', defaultFilesPath.controlSample[controlSampleKey]);\n\n        if (!defaultFilesPath.caseSample[caseSampleKey] || !defaultFilesPath.controlSample[controlSampleKey]) {\n          setErrorMessage('Selected default files are not defined.');\n          setRunning(false);\n          return;\n        }\n    \n        caseSampleFiles = [\n          defaultFilesPath.caseSample[caseSampleKey]['5k'],\n          defaultFilesPath.caseSample[caseSampleKey]['6k']\n        ];\n        controlSampleFiles = [\n          defaultFilesPath.controlSample[controlSampleKey]['5k'],\n          defaultFilesPath.controlSample[controlSampleKey]['6k']\n        ];\n      }\n    \n      proteinFile = fileSources.proteinSequence === 'local' ? files.proteinSequence[0] : defaultFilesPath.proteinSequence[files.proteinSequence[0]];\n    \n      console.log('Case sample files:', caseSampleFiles);\n      console.log('Control sample files:', controlSampleFiles);\n      console.log('Protein sequence file:', proteinFile);\n    \n      if (caseSampleFiles.length !== 2 || !caseSampleFiles[0] || !caseSampleFiles[1]) {\n        setErrorMessage('You must submit exactly two case sample files (5-mer and 6-mer).');\n        setRunning(false);\n        return;\n      }\n      if (controlSampleFiles.length !== 2 || !controlSampleFiles[0] || !controlSampleFiles[1]) {\n        setErrorMessage('You must submit exactly two control sample files (5-mer and 6-mer).');\n        setRunning(false);\n        return;\n      }\n      if (!proteinFile) {\n        setErrorMessage('You must submit exactly one protein sequence file.');\n        setRunning(false);\n        return;\n      }\n    \n      const caseFilePaths = await uploadFiles('http://localhost:8000/api/upload-case-files/', caseSampleFiles, 'case_files');\n      const controlFilePaths = await uploadFiles('http://localhost:8000/api/upload-control-files/', controlSampleFiles, 'control_files');\n      const proteinFilePath = await uploadSingleFile('http://localhost:8000/api/upload-protein-file/', proteinFile, 'protein_file');\n    \n      if (!proteinFilePath) {\n        setErrorMessage('Error uploading protein sequence file.');\n        setRunning(false);\n        return;\n      }\n    \n      const requestBody = {\n        case_file_paths: {\n          kmer_5: caseFilePaths.find(path => path.includes('5k')),\n          kmer_6: caseFilePaths.find(path => path.includes('6k')),\n        },\n        control_file_paths: {\n          kmer_5: controlFilePaths.find(path => path.includes('5k')),\n          kmer_6: controlFilePaths.find(path => path.includes('6k')),\n        },\n        protein_file_path: proteinFilePath\n      };\n    \n      console.log('Request body for PIWAS or PIWAS+PIE:', requestBody);\n    \n      if (algorithm === 'PIWAS+PIE') {\n        requestBody.piwas_case_file_path = requestBody.case_file_paths.kmer_5;\n        requestBody.piwas_control_file_path = requestBody.control_file_paths.kmer_6;\n      }\n    \n      runResponse = await axios.post(`http://localhost:8000/api/run-${algorithm.toLowerCase()}-algorithm/`, requestBody, {\n        headers: { 'Authorization': `Bearer ${token}` },\n        timeout: 600000\n      });\n    } else if (algorithm === 'PIE') {\n      const piwasResultFiles = fileSources.piwasResult === 'local' ? files.piwasResult : defaultFilesPath.piwasResult;\n      const proteinFile = fileSources.proteinSequence === 'local' ? files.proteinSequence[0] : defaultFilesPath.proteinSequence[files.proteinSequence[0]];\n\n      console.log('PIWAS result files:', piwasResultFiles);\n      console.log('Protein sequence file:', proteinFile);\n\n      if (piwasResultFiles.length !== 2) {\n        setErrorMessage('You must submit exactly two PIWAS result files (case result and control result).');\n        return;\n      }\n\n      const piwasCaseFilePath = await uploadSingleFile('http://localhost:8000/api/upload-piwas-case-result/', piwasResultFiles[0], 'piwas_case_result');\n      const piwasControlFilePath = await uploadSingleFile('http://localhost:8000/api/upload-piwas-control-result/', piwasResultFiles[1], 'piwas_control_result');\n      const proteinFilePath = await uploadSingleFile('http://localhost:8000/api/upload-protein-file/', proteinFile, 'protein_file');\n\n      const requestBody = {\n        piwas_case_file_path: piwasCaseFilePath,\n        piwas_control_file_path: piwasControlFilePath,\n        protein_file_path: proteinFilePath\n      };\n\n      console.log('Request body for PIE:', requestBody);\n\n      runResponse = await axios.post('http://localhost:8000/api/run-pie-algorithm/', requestBody, {\n        headers: { 'Authorization': `Bearer ${token}` },\n        timeout: 600000\n      });\n    }\n\n    if (runResponse.data.status === 'success') {\n      setProcessedFile(runResponse.data.file_paths);\n    } else {\n      setErrorMessage(runResponse.data.message);\n    }\n  } catch (error) {\n    setErrorMessage('Error running pipeline: ' + error.message);\n  } finally {\n    setRunning(false);\n  }\n};\n\n  const handleReset = () => {\n    setAlgorithm('');\n    setFiles({\n      caseSample: [],\n      controlSample: [],\n      proteinSequence: [],\n      piwasResult: [],\n    });\n    setFileSources({\n      caseSample: 'local',\n      controlSample: 'local',\n      proteinSequence: 'local',\n      piwasResult: 'local',\n    });\n    setUploadedFiles([]);\n    setErrorMessage('');\n    setRunning(false);\n    setProcessedFile(null);\n  };\n\n  const handleFileDelete = (fileType, index) => {\n    const updatedFiles = { ...files, [fileType]: files[fileType].filter((_, i) => i !== index) };\n    setFiles(updatedFiles);\n    setUploadedFiles(uploadedFiles.filter((file, i) => {\n      // 确保删除正确的文件类型\n      const isCorrectFileType = Object.keys(files).some(key => files[key].includes(file) && key === fileType);\n      return i !== index || !isCorrectFileType;\n    }));\n  };\n\n  return (\n    <>\n      <NavBar />\n      <Container component=\"main\" maxWidth=\"md\">\n        <Box sx={{ marginTop: 8, display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n          {!running && !processedFile && (\n            <Box sx={{ mt: 3, mb: 5, width: '100%' }}>\n              <Paper elevation={3} sx={{ p: 3, backgroundColor: '#ffffff', mb: 5, position: 'relative', border: '1px solid #ccc' }}>\n                <Typography variant=\"h6\" sx={{ position: 'absolute', top: -20, left: 16, backgroundColor: '#ffffff', px: 1 }}>\n                  Algorithm Selection\n                </Typography>\n                <Select\n                  fullWidth\n                  value={algorithm}\n                  onChange={handleAlgorithmChange}\n                  displayEmpty\n                  sx={{ mt: 3, mb: 3, height: 50 }}\n                >\n                  <MenuItem value=\"\" disabled>Select an algorithm</MenuItem>\n                  <MenuItem value=\"PIWAS\">PIWAS</MenuItem>\n                  <MenuItem value=\"PIE\">PIE</MenuItem>\n                  <MenuItem value=\"PIWAS+PIE\">PIWAS+PIE</MenuItem>\n                </Select>\n              </Paper>\n  \n              {algorithm && (\n                <Paper elevation={3} sx={{ p: 3, backgroundColor: '#ffffff', mb: 5, position: 'relative', border: '1px solid #ccc' }}>\n                  <Typography variant=\"h6\" sx={{ position: 'absolute', top: -20, left: 16, backgroundColor: '#ffffff', px: 1 }}>\n                    {algorithm === 'PIE' ? 'Upload PIWAS Results and Protein Sequence' : 'Upload Files'}\n                  </Typography>\n                  {algorithm === 'PIE' ? (\n                    <PIEUpload\n                      fileSources={fileSources}\n                      handleFileSourceChange={handleFileSourceChange}\n                      files={files}\n                      handleFileChange={handleFileChange}\n                      handleFileDelete={handleFileDelete}\n                      handleDefaultFileSelect={handleDefaultFileSelect}\n                      defaultFiles={defaultFiles}\n                    />\n                  ) : (\n                    <PIWASUpload\n                      fileSources={fileSources}\n                      handleFileSourceChange={handleFileSourceChange}\n                      files={files}\n                      handleFileChange={handleFileChange}\n                      handleFileDelete={handleFileDelete}\n                      handleDefaultFileSelect={handleDefaultFileSelect}\n                      defaultFiles={defaultFiles}\n                    />\n                  )}\n                </Paper>\n              )}\n  \n              {errorMessage && <Alert severity=\"error\">{errorMessage}</Alert>}\n              <Box sx={{ mt: 3, display: 'flex', justifyContent: 'space-between' }}>\n                <Button variant=\"contained\" color=\"primary\" onClick={handleRun}>\n                  Run\n                </Button>\n                <Button variant=\"outlined\" color=\"secondary\" onClick={handleReset}>\n                  Reset\n                </Button>\n              </Box>\n            </Box>\n          )}\n  \n          {running && <LoadingAnimation />}\n  \n          {processedFile && (\n            <ProcessedResult\n              processedFile={processedFile}\n              downloadFile={downloadFile}\n              handleReset={handleReset}\n              algorithm={algorithm}\n            />\n          )}\n        </Box>\n      </Container>\n    </>\n  );\n};\n\nexport default Pipeline;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}