{"ast":null,"code":"var _jsxFileName = \"/Users/ban/Desktop/comp9900/project/frontend/src/compoment/Pipeline.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Container, Box, Typography, MenuItem, Select, Button, Grid, Radio, RadioGroup, FormControlLabel, Paper, List, ListItem, ListItemText, IconButton, Alert } from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport NavBar from './NavBar';\nimport axios from 'axios';\nimport { useAuth } from '../AuthContext';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst defaultFiles = {\n  caseSample: ['default_case_sample_1', 'default_case_sample_2'],\n  controlSample: ['default_control_sample_1', 'default_control_sample_2'],\n  proteinSequence: ['default_protein_sequence_1', 'default_protein_sequence_2'],\n  piwasResult: ['default_piwas_case_result', 'default_piwas_control_result']\n};\nconst Pipeline = () => {\n  _s();\n  const {\n    token\n  } = useAuth(); // 从AuthContext获取Token\n  const [algorithm, setAlgorithm] = useState('');\n  const [files, setFiles] = useState({\n    caseSample: [],\n    controlSample: [],\n    proteinSequence: [],\n    piwasResult: []\n  });\n  const [fileSources, setFileSources] = useState({\n    caseSample: 'local',\n    controlSample: 'local',\n    proteinSequence: 'local',\n    piwasResult: 'local'\n  });\n  const [uploadedFiles, setUploadedFiles] = useState([]);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [running, setRunning] = useState(false);\n  const [processedFile, setProcessedFile] = useState(null);\n  const handleAlgorithmChange = event => {\n    setAlgorithm(event.target.value);\n  };\n  const handleFileChange = event => {\n    const {\n      name,\n      files: selectedFiles\n    } = event.target;\n    const updatedFiles = {\n      ...files,\n      [name]: [...files[name], ...Array.from(selectedFiles)]\n    };\n    setFiles(updatedFiles);\n    setUploadedFiles(prev => {\n      const filteredFiles = prev.filter(f => {\n        var _files$name;\n        return !((_files$name = files[name]) !== null && _files$name !== void 0 && _files$name.includes(f));\n      });\n      return [...filteredFiles, ...Array.from(selectedFiles)];\n    });\n  };\n  const handleDefaultFileSelect = (name, file) => {\n    const updatedFiles = {\n      ...files,\n      [name]: [file]\n    };\n    setFiles(updatedFiles);\n    setUploadedFiles(prev => {\n      const filteredFiles = prev.filter(f => {\n        var _files$name2;\n        return !((_files$name2 = files[name]) !== null && _files$name2 !== void 0 && _files$name2.includes(f));\n      });\n      return [...filteredFiles, {\n        name: file,\n        size: null\n      }];\n    });\n  };\n  const handleFileSourceChange = (event, fileType) => {\n    setFileSources({\n      ...fileSources,\n      [fileType]: event.target.value\n    });\n    const previousFiles = files[fileType];\n    if (previousFiles.length > 0) {\n      setUploadedFiles(prev => prev.filter(f => !previousFiles.includes(f)));\n    }\n    setFiles({\n      ...files,\n      [fileType]: []\n    });\n  };\n  const handleRun = async () => {\n    if (!algorithm) {\n      setErrorMessage('You must select an algorithm.');\n      return;\n    }\n    setErrorMessage('');\n    setRunning(true);\n    try {\n      let runResponse;\n      const uploadFiles = async (url, files, fieldName) => {\n        const formData = new FormData();\n        files.forEach(file => formData.append(fieldName, file));\n        try {\n          const response = await axios.post(url, formData, {\n            headers: {\n              'Content-Type': 'multipart/form-data',\n              'Authorization': `Bearer ${token}` // 在请求头中包含Token\n            }\n          });\n          return response.data.file_paths;\n        } catch (error) {\n          console.error(`Error uploading files to ${url}:`, error);\n          throw error;\n        }\n      };\n      if (algorithm === 'PIWAS' || algorithm === 'PIWAS+PIE') {\n        if (files.caseSample.length !== 2) {\n          setErrorMessage('You must submit exactly two case sample files (5-mer and 6-mer).');\n          return;\n        }\n        if (files.controlSample.length !== 2) {\n          setErrorMessage('You must submit exactly two control sample files (5-mer and 6-mer).');\n          return;\n        }\n        if (files.proteinSequence.length !== 1) {\n          setErrorMessage('You must submit exactly one protein sequence file.');\n          return;\n        }\n        const caseFilePaths = await uploadFiles('http://localhost:8000/api/upload-case-files/', files.caseSample, 'case_files');\n        const controlFilePaths = await uploadFiles('http://localhost:8000/api/upload-control-files/', files.controlSample, 'control_files');\n        const proteinFilePaths = await uploadFiles('http://localhost:8000/api/upload-protein-file/', files.proteinSequence, 'protein_file');\n        if (!proteinFilePaths || proteinFilePaths.length === 0) {\n          setErrorMessage('Error uploading protein sequence file.');\n          return;\n        }\n        const proteinFilePath = proteinFilePaths[0];\n        const requestBody = {\n          case_file_paths: {\n            kmer_5: caseFilePaths.find(path => path.includes('5')),\n            kmer_6: caseFilePaths.find(path => path.includes('6'))\n          },\n          control_file_paths: {\n            kmer_5: controlFilePaths.find(path => path.includes('5')),\n            kmer_6: controlFilePaths.find(path => path.includes('6'))\n          },\n          protein_file_path: proteinFilePath\n        };\n        if (algorithm === 'PIWAS+PIE') {\n          requestBody.piwas_case_file_path = requestBody.case_file_paths.kmer_5;\n          requestBody.piwas_control_file_path = requestBody.control_file_paths.kmer_6;\n        }\n        runResponse = await axios.post(`http://localhost:8000/api/run-${algorithm.toLowerCase()}-algorithm/`, requestBody, {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          },\n          timeout: 600000\n        });\n      } else if (algorithm === 'PIE') {\n        if (fileSources.piwasResult === 'local' && files.piwasResult.length !== 2) {\n          setErrorMessage('You must submit exactly two PIWAS result files (case result and control result).');\n          return;\n        }\n        let piwasCaseFilePath, piwasControlFilePath;\n        if (fileSources.piwasResult === 'local') {\n          const piwasResultPaths = await uploadFiles('http://localhost:8000/api/upload-piwas-results/', files.piwasResult, 'piwas_result_files');\n          if (!piwasResultPaths || piwasResultPaths.length < 2) {\n            setErrorMessage('Error uploading PIWAS result files.');\n            return;\n          }\n          piwasCaseFilePath = piwasResultPaths.find(path => path.includes('case'));\n          piwasControlFilePath = piwasResultPaths.find(path => path.includes('control'));\n        } else {\n          piwasCaseFilePath = defaultFiles.piwasResult.find(file => file.includes('case'));\n          piwasControlFilePath = defaultFiles.piwasResult.find(file => file.includes('control'));\n        }\n        let proteinFilePath;\n        if (fileSources.proteinSequence === 'local') {\n          const proteinResponse = await uploadFiles('http://localhost:8000/api/upload-protein-file/', files.proteinSequence, 'protein_file');\n          if (!proteinResponse || proteinResponse.length === 0) {\n            setErrorMessage('Error uploading protein sequence file.');\n            return;\n          }\n          proteinFilePath = proteinResponse[0];\n        } else {\n          proteinFilePath = defaultFiles.proteinSequence[0];\n        }\n        runResponse = await axios.post('http://localhost:8000/api/run-pie-algorithm/', {\n          piwas_case_file_path: piwasCaseFilePath,\n          piwas_control_file_path: piwasControlFilePath,\n          protein_file_path: proteinFilePath\n        }, {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          },\n          timeout: 600000\n        });\n      }\n      if (runResponse.data.status === 'success') {\n        setProcessedFile(runResponse.data.file_paths);\n      } else {\n        setErrorMessage(runResponse.data.message);\n      }\n    } catch (error) {\n      setErrorMessage('Error running pipeline: ' + error.message);\n    } finally {\n      setRunning(false);\n    }\n  };\n  const handleReset = () => {\n    setAlgorithm('');\n    setFiles({\n      caseSample: [],\n      controlSample: [],\n      proteinSequence: [],\n      piwasResult: []\n    });\n    setFileSources({\n      caseSample: 'local',\n      controlSample: 'local',\n      proteinSequence: 'local',\n      piwasResult: 'local'\n    });\n    setUploadedFiles([]);\n    setErrorMessage('');\n    setRunning(false);\n    setProcessedFile(null);\n  };\n  const handleFileDelete = (fileType, index) => {\n    const updatedFiles = {\n      ...files,\n      [fileType]: files[fileType].filter((_, i) => i !== index)\n    };\n    setFiles(updatedFiles);\n    setUploadedFiles(uploadedFiles.filter((file, i) => {\n      // 确保删除正确的文件类型\n      const isCorrectFileType = Object.keys(files).some(key => files[key].includes(file) && key === fileType);\n      return i !== index || !isCorrectFileType;\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      component: \"main\",\n      maxWidth: \"md\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          marginTop: 8,\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center'\n        },\n        children: [!running && !processedFile && /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mt: 3,\n            mb: 5,\n            width: '100%'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Paper, {\n            elevation: 3,\n            sx: {\n              p: 3,\n              backgroundColor: '#ffffff',\n              mb: 5,\n              position: 'relative',\n              border: '1px solid #ccc'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              sx: {\n                position: 'absolute',\n                top: -20,\n                left: 16,\n                backgroundColor: '#ffffff',\n                px: 1\n              },\n              children: \"Algorithm Selection\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              fullWidth: true,\n              value: algorithm,\n              onChange: handleAlgorithmChange,\n              displayEmpty: true,\n              sx: {\n                mt: 3,\n                mb: 3,\n                height: 50\n              },\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"\",\n                disabled: true,\n                children: \"Select an algorithm\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"PIWAS\",\n                children: \"PIWAS\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"PIE\",\n                children: \"PIE\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"PIWAS+PIE\",\n                children: \"PIWAS+PIE\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 29\n          }, this), algorithm && /*#__PURE__*/_jsxDEV(Paper, {\n            elevation: 3,\n            sx: {\n              p: 3,\n              backgroundColor: '#ffffff',\n              mb: 5,\n              position: 'relative',\n              border: '1px solid #ccc'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              sx: {\n                position: 'absolute',\n                top: -20,\n                left: 16,\n                backgroundColor: '#ffffff',\n                px: 1\n              },\n              children: algorithm === 'PIE' ? 'Upload PIWAS Results and Protein Sequence' : 'Upload Files'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 19\n            }, this), algorithm !== 'PIE' && ['caseSample', 'controlSample', 'proteinSequence'].map((fileType, index) => /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                mt: 2\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                children: fileType.replace(/([A-Z])/g, ' $1').replace(/^./, str => str.toUpperCase())\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 260,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                spacing: 2,\n                alignItems: \"center\",\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(RadioGroup, {\n                    row: true,\n                    name: fileType,\n                    value: fileSources[fileType],\n                    onChange: e => handleFileSourceChange(e, fileType),\n                    children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n                      value: \"local\",\n                      control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 269,\n                        columnNumber: 70\n                      }, this),\n                      label: \"Upload from local\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 269,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                      value: \"default\",\n                      control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 270,\n                        columnNumber: 72\n                      }, this),\n                      label: \"Select default file\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 270,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 263,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 262,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  children: fileSources[fileType] === 'local' ? /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"file\",\n                      name: fileType,\n                      multiple: fileType !== 'proteinSequence',\n                      onChange: handleFileChange,\n                      style: {\n                        display: 'block',\n                        marginBottom: '10px'\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 276,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(List, {\n                      children: files[fileType].map((file, idx) => /*#__PURE__*/_jsxDEV(ListItem, {\n                        secondaryAction: /*#__PURE__*/_jsxDEV(IconButton, {\n                          edge: \"end\",\n                          \"aria-label\": \"delete\",\n                          onClick: () => handleFileDelete(fileType, idx),\n                          children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 287,\n                            columnNumber: 39\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 286,\n                          columnNumber: 37\n                        }, this),\n                        children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                          primary: file.name\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 290,\n                          columnNumber: 37\n                        }, this)\n                      }, idx, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 285,\n                        columnNumber: 35\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 283,\n                      columnNumber: 31\n                    }, this), files[fileType].length > 0 && /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"caption\",\n                      sx: {\n                        display: 'block',\n                        mt: 1\n                      },\n                      children: [\"Selected \", files[fileType].length, \" files for \", fileType.replace(/([A-Z])/g, ' $1').toLowerCase()]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 295,\n                      columnNumber: 33\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 275,\n                    columnNumber: 29\n                  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(Select, {\n                      fullWidth: true,\n                      displayEmpty: true,\n                      onChange: event => handleDefaultFileSelect(fileType, event.target.value),\n                      value: files[fileType][0] || '',\n                      sx: {\n                        height: 40\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                        value: \"\",\n                        disabled: true,\n                        children: \"Select a default file\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 309,\n                        columnNumber: 33\n                      }, this), defaultFiles[fileType].map((file, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n                        value: file,\n                        children: file\n                      }, index, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 311,\n                        columnNumber: 35\n                      }, this))]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 302,\n                      columnNumber: 31\n                    }, this), files[fileType].length > 0 && /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"caption\",\n                      sx: {\n                        display: 'block',\n                        mt: 1\n                      },\n                      children: [\"Selected default file: \", files[fileType][0]]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 315,\n                      columnNumber: 33\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 301,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 273,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 23\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 21\n            }, this)), algorithm === 'PIE' && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  mt: 2\n                },\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  children: \"PIWAS Case Result\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 328,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  container: true,\n                  spacing: 2,\n                  alignItems: \"center\",\n                  children: [/*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 12,\n                    children: /*#__PURE__*/_jsxDEV(RadioGroup, {\n                      row: true,\n                      name: \"piwasCaseResult\",\n                      value: fileSources.piwasResult,\n                      onChange: e => handleFileSourceChange(e, 'piwasResult'),\n                      children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n                        value: \"local\",\n                        control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 337,\n                          columnNumber: 72\n                        }, this),\n                        label: \"Upload from local\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 337,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                        value: \"default\",\n                        control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 338,\n                          columnNumber: 74\n                        }, this),\n                        label: \"Select default file\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 338,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 331,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 330,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 12,\n                    children: fileSources.piwasResult === 'local' ? /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"file\",\n                        name: \"piwasResult\",\n                        multiple: true,\n                        onChange: handleFileChange,\n                        style: {\n                          display: 'block',\n                          marginBottom: '10px'\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 344,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(List, {\n                        children: files.piwasResult.map((file, idx) => /*#__PURE__*/_jsxDEV(ListItem, {\n                          secondaryAction: /*#__PURE__*/_jsxDEV(IconButton, {\n                            edge: \"end\",\n                            \"aria-label\": \"delete\",\n                            onClick: () => handleFileDelete('piwasResult', idx),\n                            children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 355,\n                              columnNumber: 41\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 354,\n                            columnNumber: 39\n                          }, this),\n                          children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                            primary: file.name\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 358,\n                            columnNumber: 39\n                          }, this)\n                        }, idx, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 353,\n                          columnNumber: 37\n                        }, this))\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 351,\n                        columnNumber: 33\n                      }, this), files.piwasResult.length > 0 && /*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"caption\",\n                        sx: {\n                          display: 'block',\n                          mt: 1\n                        },\n                        children: [\"Selected \", files.piwasResult.length, \" PIWAS result files\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 363,\n                        columnNumber: 35\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 343,\n                      columnNumber: 31\n                    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [/*#__PURE__*/_jsxDEV(Select, {\n                        fullWidth: true,\n                        displayEmpty: true,\n                        onChange: event => handleDefaultFileSelect('piwasResult', event.target.value),\n                        value: files.piwasResult[0] || '',\n                        sx: {\n                          height: 40\n                        },\n                        children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                          value: \"\",\n                          disabled: true,\n                          children: \"Select a default file\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 377,\n                          columnNumber: 35\n                        }, this), defaultFiles.piwasResult.map((file, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n                          value: file,\n                          children: file\n                        }, index, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 379,\n                          columnNumber: 37\n                        }, this))]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 370,\n                        columnNumber: 33\n                      }, this), files.piwasResult.length > 0 && /*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"caption\",\n                        sx: {\n                          display: 'block',\n                          mt: 1\n                        },\n                        children: [\"Selected default file: \", files.piwasResult[0]]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 383,\n                        columnNumber: 35\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 369,\n                      columnNumber: 31\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 341,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 329,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 327,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  mt: 2\n                },\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  children: \"Protein Sequence\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 393,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  container: true,\n                  spacing: 2,\n                  alignItems: \"center\",\n                  children: [/*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 12,\n                    children: /*#__PURE__*/_jsxDEV(RadioGroup, {\n                      row: true,\n                      name: \"proteinSequence\",\n                      value: fileSources.proteinSequence,\n                      onChange: e => handleFileSourceChange(e, 'proteinSequence'),\n                      children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n                        value: \"local\",\n                        control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 402,\n                          columnNumber: 72\n                        }, this),\n                        label: \"Upload from local\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 402,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                        value: \"default\",\n                        control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 403,\n                          columnNumber: 74\n                        }, this),\n                        label: \"Select default file\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 403,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 396,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 395,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 12,\n                    children: fileSources.proteinSequence === 'local' ? /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"file\",\n                        name: \"proteinSequence\",\n                        onChange: handleFileChange,\n                        style: {\n                          display: 'block',\n                          marginBottom: '10px'\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 409,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(List, {\n                        children: files.proteinSequence.map((file, idx) => /*#__PURE__*/_jsxDEV(ListItem, {\n                          secondaryAction: /*#__PURE__*/_jsxDEV(IconButton, {\n                            edge: \"end\",\n                            \"aria-label\": \"delete\",\n                            onClick: () => handleFileDelete('proteinSequence', idx),\n                            children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 419,\n                              columnNumber: 41\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 418,\n                            columnNumber: 39\n                          }, this),\n                          children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                            primary: file.name\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 422,\n                            columnNumber: 39\n                          }, this)\n                        }, idx, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 417,\n                          columnNumber: 37\n                        }, this))\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 415,\n                        columnNumber: 33\n                      }, this), files.proteinSequence.length > 0 && /*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"caption\",\n                        sx: {\n                          display: 'block',\n                          mt: 1\n                        },\n                        children: [\"Selected \", files.proteinSequence.length, \" protein sequence files\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 427,\n                        columnNumber: 35\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 408,\n                      columnNumber: 31\n                    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [/*#__PURE__*/_jsxDEV(Select, {\n                        fullWidth: true,\n                        displayEmpty: true,\n                        onChange: event => handleDefaultFileSelect('proteinSequence', event.target.value),\n                        value: files.proteinSequence[0] || '',\n                        sx: {\n                          height: 40\n                        },\n                        children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                          value: \"\",\n                          disabled: true,\n                          children: \"Select a default file\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 441,\n                          columnNumber: 35\n                        }, this), defaultFiles.proteinSequence.map((file, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n                          value: file,\n                          children: file\n                        }, index, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 443,\n                          columnNumber: 37\n                        }, this))]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 434,\n                        columnNumber: 33\n                      }, this), files.proteinSequence.length > 0 && /*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"caption\",\n                        sx: {\n                          display: 'block',\n                          mt: 1\n                        },\n                        children: [\"Selected default file: \", files.proteinSequence[0]]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 447,\n                        columnNumber: 35\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 433,\n                      columnNumber: 31\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 406,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 394,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 392,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 17\n          }, this), errorMessage && /*#__PURE__*/_jsxDEV(Alert, {\n            severity: \"error\",\n            children: errorMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 461,\n            columnNumber: 32\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mt: 3,\n              display: 'flex',\n              justifyContent: 'space-between'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"primary\",\n              onClick: handleRun,\n              children: \"Run\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 463,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              color: \"secondary\",\n              onClick: handleReset,\n              children: \"Reset\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 466,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 462,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 13\n        }, this), running && /*#__PURE__*/_jsxDEV(Typography, {\n          children: \"Running...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 473,\n          columnNumber: 23\n        }, this), processedFile && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            children: \"Process completed. Download the result below:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 477,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            href: processedFile,\n            download: true,\n            children: \"Download Processed File\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 478,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mt: 2\n            },\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"primary\",\n              onClick: handleReset,\n              children: \"New Pipeline\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 482,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 481,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 476,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Pipeline, \"fEm54XNEcEEyqgPtv6hZAfzg94M=\", false, function () {\n  return [useAuth];\n});\n_c = Pipeline;\nexport default Pipeline;\nvar _c;\n$RefreshReg$(_c, \"Pipeline\");","map":{"version":3,"names":["React","useState","Container","Box","Typography","MenuItem","Select","Button","Grid","Radio","RadioGroup","FormControlLabel","Paper","List","ListItem","ListItemText","IconButton","Alert","DeleteIcon","NavBar","axios","useAuth","jsxDEV","_jsxDEV","Fragment","_Fragment","defaultFiles","caseSample","controlSample","proteinSequence","piwasResult","Pipeline","_s","token","algorithm","setAlgorithm","files","setFiles","fileSources","setFileSources","uploadedFiles","setUploadedFiles","errorMessage","setErrorMessage","running","setRunning","processedFile","setProcessedFile","handleAlgorithmChange","event","target","value","handleFileChange","name","selectedFiles","updatedFiles","Array","from","prev","filteredFiles","filter","f","_files$name","includes","handleDefaultFileSelect","file","_files$name2","size","handleFileSourceChange","fileType","previousFiles","length","handleRun","runResponse","uploadFiles","url","fieldName","formData","FormData","forEach","append","response","post","headers","data","file_paths","error","console","caseFilePaths","controlFilePaths","proteinFilePaths","proteinFilePath","requestBody","case_file_paths","kmer_5","find","path","kmer_6","control_file_paths","protein_file_path","piwas_case_file_path","piwas_control_file_path","toLowerCase","timeout","piwasCaseFilePath","piwasControlFilePath","piwasResultPaths","proteinResponse","status","message","handleReset","handleFileDelete","index","_","i","isCorrectFileType","Object","keys","some","key","children","fileName","_jsxFileName","lineNumber","columnNumber","component","maxWidth","sx","marginTop","display","flexDirection","alignItems","mt","mb","width","elevation","p","backgroundColor","position","border","variant","top","left","px","fullWidth","onChange","displayEmpty","height","disabled","map","replace","str","toUpperCase","container","spacing","item","xs","row","e","control","label","type","multiple","style","marginBottom","idx","secondaryAction","edge","onClick","primary","severity","justifyContent","color","href","download","_c","$RefreshReg$"],"sources":["/Users/ban/Desktop/comp9900/project/frontend/src/compoment/Pipeline.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Container, Box, Typography, MenuItem, Select, Button, Grid, Radio, RadioGroup, FormControlLabel, Paper, List, ListItem, ListItemText, IconButton, Alert } from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport NavBar from './NavBar';\nimport axios from 'axios';\nimport { useAuth } from '../AuthContext';\n\nconst defaultFiles = {\n  caseSample: ['default_case_sample_1', 'default_case_sample_2'],\n  controlSample: ['default_control_sample_1', 'default_control_sample_2'],\n  proteinSequence: ['default_protein_sequence_1', 'default_protein_sequence_2'],\n  piwasResult: ['default_piwas_case_result', 'default_piwas_control_result']\n};\n\nconst Pipeline = () => {\n  const { token } = useAuth(); // 从AuthContext获取Token\n  const [algorithm, setAlgorithm] = useState('');\n  const [files, setFiles] = useState({\n    caseSample: [],\n    controlSample: [],\n    proteinSequence: [],\n    piwasResult: [],\n  });\n  const [fileSources, setFileSources] = useState({\n    caseSample: 'local',\n    controlSample: 'local',\n    proteinSequence: 'local',\n    piwasResult: 'local',\n  });\n  const [uploadedFiles, setUploadedFiles] = useState([]);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [running, setRunning] = useState(false);\n  const [processedFile, setProcessedFile] = useState(null);\n\n  const handleAlgorithmChange = (event) => {\n    setAlgorithm(event.target.value);\n  };\n\n  const handleFileChange = (event) => {\n    const { name, files: selectedFiles } = event.target;\n    const updatedFiles = { ...files, [name]: [...files[name], ...Array.from(selectedFiles)] };\n    setFiles(updatedFiles);\n    setUploadedFiles((prev) => {\n      const filteredFiles = prev.filter(f => !files[name]?.includes(f));\n      return [...filteredFiles, ...Array.from(selectedFiles)];\n    });\n  };\n\n  const handleDefaultFileSelect = (name, file) => {\n    const updatedFiles = { ...files, [name]: [file] };\n    setFiles(updatedFiles);\n    setUploadedFiles((prev) => {\n      const filteredFiles = prev.filter(f => !files[name]?.includes(f));\n      return [...filteredFiles, { name: file, size: null }];\n    });\n  };\n\n  const handleFileSourceChange = (event, fileType) => {\n    setFileSources({ ...fileSources, [fileType]: event.target.value });\n    const previousFiles = files[fileType];\n    if (previousFiles.length > 0) {\n      setUploadedFiles(prev => prev.filter(f => !previousFiles.includes(f)));\n    }\n    setFiles({ ...files, [fileType]: [] });\n  };\n\n  const handleRun = async () => {\n    if (!algorithm) {\n      setErrorMessage('You must select an algorithm.');\n      return;\n    }\n  \n    setErrorMessage('');\n    setRunning(true);\n  \n    try {\n      let runResponse;\n  \n      const uploadFiles = async (url, files, fieldName) => {\n        const formData = new FormData();\n        files.forEach(file => formData.append(fieldName, file));\n        try {\n          const response = await axios.post(url, formData, {\n            headers: {\n              'Content-Type': 'multipart/form-data',\n              'Authorization': `Bearer ${token}` // 在请求头中包含Token\n            }\n          });\n          return response.data.file_paths;\n        } catch (error) {\n          console.error(`Error uploading files to ${url}:`, error);\n          throw error;\n        }\n      };\n  \n      if (algorithm === 'PIWAS' || algorithm === 'PIWAS+PIE') {\n        if (files.caseSample.length !== 2) {\n          setErrorMessage('You must submit exactly two case sample files (5-mer and 6-mer).');\n          return;\n        }\n        if (files.controlSample.length !== 2) {\n          setErrorMessage('You must submit exactly two control sample files (5-mer and 6-mer).');\n          return;\n        }\n        if (files.proteinSequence.length !== 1) {\n          setErrorMessage('You must submit exactly one protein sequence file.');\n          return;\n        }\n  \n        const caseFilePaths = await uploadFiles('http://localhost:8000/api/upload-case-files/', files.caseSample, 'case_files');\n        const controlFilePaths = await uploadFiles('http://localhost:8000/api/upload-control-files/', files.controlSample, 'control_files');\n        const proteinFilePaths = await uploadFiles('http://localhost:8000/api/upload-protein-file/', files.proteinSequence, 'protein_file');\n  \n        if (!proteinFilePaths || proteinFilePaths.length === 0) {\n          setErrorMessage('Error uploading protein sequence file.');\n          return;\n        }\n  \n        const proteinFilePath = proteinFilePaths[0];\n  \n        const requestBody = {\n          case_file_paths: {\n            kmer_5: caseFilePaths.find(path => path.includes('5')),\n            kmer_6: caseFilePaths.find(path => path.includes('6')),\n          },\n          control_file_paths: {\n            kmer_5: controlFilePaths.find(path => path.includes('5')),\n            kmer_6: controlFilePaths.find(path => path.includes('6')),\n          },\n          protein_file_path: proteinFilePath\n        };\n  \n        if (algorithm === 'PIWAS+PIE') {\n          requestBody.piwas_case_file_path = requestBody.case_file_paths.kmer_5;\n          requestBody.piwas_control_file_path = requestBody.control_file_paths.kmer_6;\n        }\n  \n        runResponse = await axios.post(`http://localhost:8000/api/run-${algorithm.toLowerCase()}-algorithm/`, requestBody, {\n          headers: { 'Authorization': `Bearer ${token}` },\n          timeout: 600000\n        });\n      }\n  \n      else if (algorithm === 'PIE') {\n        if (fileSources.piwasResult === 'local' && files.piwasResult.length !== 2) {\n          setErrorMessage('You must submit exactly two PIWAS result files (case result and control result).');\n          return;\n        }\n  \n        let piwasCaseFilePath, piwasControlFilePath;\n        if (fileSources.piwasResult === 'local') {\n          const piwasResultPaths = await uploadFiles('http://localhost:8000/api/upload-piwas-results/', files.piwasResult, 'piwas_result_files');\n          if (!piwasResultPaths || piwasResultPaths.length < 2) {\n            setErrorMessage('Error uploading PIWAS result files.');\n            return;\n          }\n          piwasCaseFilePath = piwasResultPaths.find(path => path.includes('case'));\n          piwasControlFilePath = piwasResultPaths.find(path => path.includes('control'));\n        } else {\n          piwasCaseFilePath = defaultFiles.piwasResult.find(file => file.includes('case'));\n          piwasControlFilePath = defaultFiles.piwasResult.find(file => file.includes('control'));\n        }\n  \n        let proteinFilePath;\n        if (fileSources.proteinSequence === 'local') {\n          const proteinResponse = await uploadFiles('http://localhost:8000/api/upload-protein-file/', files.proteinSequence, 'protein_file');\n          if (!proteinResponse || proteinResponse.length === 0) {\n            setErrorMessage('Error uploading protein sequence file.');\n            return;\n          }\n          proteinFilePath = proteinResponse[0];\n        } else {\n          proteinFilePath = defaultFiles.proteinSequence[0];\n        }\n  \n        runResponse = await axios.post('http://localhost:8000/api/run-pie-algorithm/', {\n          piwas_case_file_path: piwasCaseFilePath,\n          piwas_control_file_path: piwasControlFilePath,\n          protein_file_path: proteinFilePath\n        }, {\n          headers: { 'Authorization': `Bearer ${token}` },\n          timeout: 600000\n        });\n      }\n  \n      if (runResponse.data.status === 'success') {\n        setProcessedFile(runResponse.data.file_paths);\n      } else {\n        setErrorMessage(runResponse.data.message);\n      }\n    } catch (error) {\n      setErrorMessage('Error running pipeline: ' + error.message);\n    } finally {\n      setRunning(false);\n    }\n  };\n\n  const handleReset = () => {\n    setAlgorithm('');\n    setFiles({\n      caseSample: [],\n      controlSample: [],\n      proteinSequence: [],\n      piwasResult: [],\n    });\n    setFileSources({\n      caseSample: 'local',\n      controlSample: 'local',\n      proteinSequence: 'local',\n      piwasResult: 'local',\n    });\n    setUploadedFiles([]);\n    setErrorMessage('');\n    setRunning(false);\n    setProcessedFile(null);\n  };\n\n  const handleFileDelete = (fileType, index) => {\n    const updatedFiles = { ...files, [fileType]: files[fileType].filter((_, i) => i !== index) };\n    setFiles(updatedFiles);\n    setUploadedFiles(uploadedFiles.filter((file, i) => {\n      // 确保删除正确的文件类型\n      const isCorrectFileType = Object.keys(files).some(key => files[key].includes(file) && key === fileType);\n      return i !== index || !isCorrectFileType;\n    }));\n  };\n\n  return (\n    <>\n      <NavBar />\n      <Container component=\"main\" maxWidth=\"md\">\n        <Box sx={{ marginTop: 8, display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n          {!running && !processedFile && (\n            <Box sx={{ mt: 3, mb: 5, width: '100%' }}>\n                            <Paper elevation={3} sx={{ p: 3, backgroundColor: '#ffffff', mb: 5, position: 'relative', border: '1px solid #ccc' }}>\n                <Typography variant=\"h6\" sx={{ position: 'absolute', top: -20, left: 16, backgroundColor: '#ffffff', px: 1 }}>\n                  Algorithm Selection\n                </Typography>\n                <Select\n                  fullWidth\n                  value={algorithm}\n                  onChange={handleAlgorithmChange}\n                  displayEmpty\n                  sx={{ mt: 3, mb: 3, height: 50 }}\n                >\n                  <MenuItem value=\"\" disabled>Select an algorithm</MenuItem>\n                  <MenuItem value=\"PIWAS\">PIWAS</MenuItem>\n                  <MenuItem value=\"PIE\">PIE</MenuItem>\n                  <MenuItem value=\"PIWAS+PIE\">PIWAS+PIE</MenuItem>\n                </Select>\n              </Paper>\n\n              {algorithm && (\n                <Paper elevation={3} sx={{ p: 3, backgroundColor: '#ffffff', mb: 5, position: 'relative', border: '1px solid #ccc' }}>\n                  <Typography variant=\"h6\" sx={{ position: 'absolute', top: -20, left: 16, backgroundColor: '#ffffff', px: 1 }}>\n                    {algorithm === 'PIE' ? 'Upload PIWAS Results and Protein Sequence' : 'Upload Files'}\n                  </Typography>\n                  {algorithm !== 'PIE' && ['caseSample', 'controlSample', 'proteinSequence'].map((fileType, index) => (\n                    <Box key={index} sx={{ mt: 2 }}>\n                      <Typography>{fileType.replace(/([A-Z])/g, ' $1').replace(/^./, str => str.toUpperCase())}</Typography>\n                      <Grid container spacing={2} alignItems=\"center\">\n                        <Grid item xs={12}>\n                          <RadioGroup\n                            row\n                            name={fileType}\n                            value={fileSources[fileType]}\n                            onChange={(e) => handleFileSourceChange(e, fileType)}\n                          >\n                            <FormControlLabel value=\"local\" control={<Radio />} label=\"Upload from local\" />\n                            <FormControlLabel value=\"default\" control={<Radio />} label=\"Select default file\"/>\n                          </RadioGroup>\n                        </Grid>\n                        <Grid item xs={12}>\n                          {fileSources[fileType] === 'local' ? (\n                            <div>\n                              <input\n                                type=\"file\"\n                                name={fileType}\n                                multiple={fileType !== 'proteinSequence'}\n                                onChange={handleFileChange}\n                                style={{ display: 'block', marginBottom: '10px' }}\n                              />\n                              <List>\n                                {files[fileType].map((file, idx) => (\n                                  <ListItem key={idx} secondaryAction={\n                                    <IconButton edge=\"end\" aria-label=\"delete\" onClick={() => handleFileDelete(fileType, idx)}>\n                                      <DeleteIcon />\n                                    </IconButton>\n                                  }>\n                                    <ListItemText primary={file.name} />\n                                  </ListItem>\n                                ))}\n                              </List>\n                              {files[fileType].length > 0 && (\n                                <Typography variant=\"caption\" sx={{ display: 'block', mt: 1 }}>\n                                  Selected {files[fileType].length} files for {fileType.replace(/([A-Z])/g, ' $1').toLowerCase()}\n                                </Typography>\n                              )}\n                            </div>\n                          ) : (\n                            <div>\n                              <Select\n                                fullWidth\n                                displayEmpty\n                                onChange={(event) => handleDefaultFileSelect(fileType, event.target.value)}\n                                value={files[fileType][0] || ''}\n                                sx={{ height: 40 }}\n                              >\n                                <MenuItem value=\"\" disabled>Select a default file</MenuItem>\n                                {defaultFiles[fileType].map((file, index) => (\n                                  <MenuItem key={index} value={file}>{file}</MenuItem>\n                                ))}\n                              </Select>\n                              {files[fileType].length > 0 && (\n                                <Typography variant=\"caption\" sx={{ display: 'block', mt: 1 }}>\n                                  Selected default file: {files[fileType][0]}\n                                </Typography>\n                              )}\n                            </div>\n                          )}\n                        </Grid>\n                      </Grid>\n                    </Box>\n                  ))}\n                  {algorithm === 'PIE' && (\n                    <>\n                      <Box sx={{ mt: 2 }}>\n                        <Typography>PIWAS Case Result</Typography>\n                        <Grid container spacing={2} alignItems=\"center\">\n                          <Grid item xs={12}>\n                            <RadioGroup\n                              row\n                              name=\"piwasCaseResult\"\n                              value={fileSources.piwasResult}\n                              onChange={(e) => handleFileSourceChange(e, 'piwasResult')}\n                            >\n                              <FormControlLabel value=\"local\" control={<Radio />} label=\"Upload from local\" />\n                              <FormControlLabel value=\"default\" control={<Radio />} label=\"Select default file\"/>\n                            </RadioGroup>\n                          </Grid>\n                          <Grid item xs={12}>\n                            {fileSources.piwasResult === 'local' ? (\n                              <div>\n                                <input\n                                  type=\"file\"\n                                  name=\"piwasResult\"\n                                  multiple\n                                  onChange={handleFileChange}\n                                  style={{ display: 'block', marginBottom: '10px' }}\n                                />\n                                <List>\n                                  {files.piwasResult.map((file, idx) => (\n                                    <ListItem key={idx} secondaryAction={\n                                      <IconButton edge=\"end\" aria-label=\"delete\" onClick={() => handleFileDelete('piwasResult', idx)}>\n                                        <DeleteIcon />\n                                      </IconButton>\n                                    }>\n                                      <ListItemText primary={file.name} />\n                                    </ListItem>\n                                  ))}\n                                </List>\n                                {files.piwasResult.length > 0 && (\n                                  <Typography variant=\"caption\" sx={{ display: 'block', mt: 1 }}>\n                                    Selected {files.piwasResult.length} PIWAS result files\n                                  </Typography>\n                                )}\n                              </div>\n                            ) : (\n                              <div>\n                                <Select\n                                  fullWidth\n                                  displayEmpty\n                                  onChange={(event) => handleDefaultFileSelect('piwasResult', event.target.value)}\n                                  value={files.piwasResult[0] || ''}\n                                  sx={{ height: 40 }}\n                                >\n                                  <MenuItem value=\"\" disabled>Select a default file</MenuItem>\n                                  {defaultFiles.piwasResult.map((file, index) => (\n                                    <MenuItem key={index} value={file}>{file}</MenuItem>\n                                  ))}\n                                </Select>\n                                {files.piwasResult.length > 0 && (\n                                  <Typography variant=\"caption\" sx={{ display: 'block', mt: 1 }}>\n                                    Selected default file: {files.piwasResult[0]}\n                                  </Typography>\n                                )}\n                              </div>\n                            )}\n                          </Grid>\n                        </Grid>\n                      </Box>\n                      <Box sx={{ mt: 2 }}>\n                        <Typography>Protein Sequence</Typography>\n                        <Grid container spacing={2} alignItems=\"center\">\n                          <Grid item xs={12}>\n                            <RadioGroup\n                              row\n                              name=\"proteinSequence\"\n                              value={fileSources.proteinSequence}\n                              onChange={(e) => handleFileSourceChange(e, 'proteinSequence')}\n                            >\n                              <FormControlLabel value=\"local\" control={<Radio />} label=\"Upload from local\" />\n                              <FormControlLabel value=\"default\" control={<Radio />} label=\"Select default file\"/>\n                            </RadioGroup>\n                          </Grid>\n                          <Grid item xs={12}>\n                            {fileSources.proteinSequence === 'local' ? (\n                              <div>\n                                <input\n                                  type=\"file\"\n                                  name=\"proteinSequence\"\n                                  onChange={handleFileChange}\n                                  style={{ display: 'block', marginBottom: '10px' }}\n                                />\n                                <List>\n                                  {files.proteinSequence.map((file, idx) => (\n                                    <ListItem key={idx} secondaryAction={\n                                      <IconButton edge=\"end\" aria-label=\"delete\" onClick={() => handleFileDelete('proteinSequence', idx)}>\n                                        <DeleteIcon />\n                                      </IconButton>\n                                    }>\n                                      <ListItemText primary={file.name} />\n                                    </ListItem>\n                                  ))}\n                                </List>\n                                {files.proteinSequence.length > 0 && (\n                                  <Typography variant=\"caption\" sx={{ display: 'block', mt: 1 }}>\n                                    Selected {files.proteinSequence.length} protein sequence files\n                                  </Typography>\n                                )}\n                              </div>\n                            ) : (\n                              <div>\n                                <Select\n                                  fullWidth\n                                  displayEmpty\n                                  onChange={(event) => handleDefaultFileSelect('proteinSequence', event.target.value)}\n                                  value={files.proteinSequence[0] || ''}\n                                  sx={{ height: 40 }}\n                                >\n                                  <MenuItem value=\"\" disabled>Select a default file</MenuItem>\n                                  {defaultFiles.proteinSequence.map((file, index) => (\n                                    <MenuItem key={index} value={file}>{file}</MenuItem>\n                                  ))}\n                                </Select>\n                                {files.proteinSequence.length > 0 && (\n                                  <Typography variant=\"caption\" sx={{ display: 'block', mt: 1 }}>\n                                    Selected default file: {files.proteinSequence[0]}\n                                  </Typography>\n                                )}\n                              </div>\n                            )}\n                          </Grid>\n                        </Grid>\n                      </Box>\n                    </>\n                  )}\n                </Paper>\n              )}\n\n              {errorMessage && <Alert severity=\"error\">{errorMessage}</Alert>}\n              <Box sx={{ mt: 3, display: 'flex', justifyContent: 'space-between' }}>\n                <Button variant=\"contained\" color=\"primary\" onClick={handleRun}>\n                  Run\n                </Button>\n                <Button variant=\"outlined\" color=\"secondary\" onClick={handleReset}>\n                  Reset\n                </Button>\n              </Box>\n            </Box>\n          )}\n  \n          {running && <Typography>Running...</Typography>}\n  \n          {processedFile && (\n            <div>\n              <Typography>Process completed. Download the result below:</Typography>\n              <Button href={processedFile} download>\n                Download Processed File\n              </Button>\n              <Box sx={{ mt: 2 }}>\n                <Button variant=\"contained\" color=\"primary\" onClick={handleReset}>\n                  New Pipeline\n                </Button>\n              </Box>\n            </div>\n          )}\n          \n        </Box>\n      </Container>\n    </>\n  );\n};\n\nexport default Pipeline;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}