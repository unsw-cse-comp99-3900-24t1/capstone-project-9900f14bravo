{"ast":null,"code":"var _jsxFileName = \"/Users/wenjing/Desktop/COMP9900/front/my-app/src/compoment/PasswordReset.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport NavBar from './NavBar';\nimport { TextField, Button, Box, Container, Typography, MenuItem } from '@mui/material';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst securityQuestions = ['What was your childhood nickname?', 'What is the name of your favorite childhood friend?', 'What was your favorite place to visit as a child?', 'What was your dream job as a child?'];\nconst PasswordReset = () => {\n  _s();\n  const navigate = useNavigate();\n  const [formData, setFormData] = useState({\n    username: '',\n    securityQuestion: '',\n    answer: '',\n    newPassword: ''\n  });\n  const [errors, setErrors] = useState({});\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    const {\n      username,\n      securityQuestion,\n      answer,\n      newPassword\n    } = formData;\n\n    // 清除所有错误提示\n    setErrors({});\n    if (!username || !securityQuestion || !answer || !newPassword) {\n      const newErrors = {};\n      if (!username) newErrors.username = 'Username is required';\n      if (!securityQuestion) newErrors.securityQuestion = 'Security question is required';\n      if (!answer) newErrors.answer = 'Answer is required';\n      if (!newPassword) newErrors.newPassword = 'New password is required';\n      setErrors(newErrors);\n      return;\n    }\n    axios.post('http://192.168.20.10:8000/api/reset_password/', {\n      username: username,\n      questions: securityQuestion,\n      answer: answer,\n      newPassword: newPassword\n    }).then(function (response) {\n      alert('Password reset successfully.');\n      navigate('/pipeline'); // 密码重置成功后跳转\n    }).catch(function (error) {\n      console.error('Error:', error);\n      setErrors({\n        ...errors,\n        general: 'Failed to reset password, please try again.'\n      });\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      component: \"main\",\n      maxWidth: \"xs\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          marginTop: 15,\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          component: \"h1\",\n          variant: \"h5\",\n          children: \"Password Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), errors.general && /*#__PURE__*/_jsxDEV(Typography, {\n          color: \"error\",\n          sx: {\n            mt: 1,\n            mb: 1\n          },\n          children: errors.general\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          component: \"form\",\n          onSubmit: handleSubmit,\n          sx: {\n            mt: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            margin: \"normal\",\n            required: true,\n            fullWidth: true,\n            id: \"username\",\n            label: \"Username\",\n            name: \"username\",\n            autoComplete: \"username\",\n            autoFocus: true,\n            value: formData.username,\n            onChange: handleChange,\n            error: Boolean(errors.username),\n            helperText: errors.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            margin: \"normal\",\n            required: true,\n            fullWidth: true,\n            id: \"securityQuestion\",\n            select: true,\n            label: \"Security Question\",\n            name: \"securityQuestion\",\n            autoComplete: \"security-question\",\n            value: formData.securityQuestion,\n            onChange: handleChange,\n            error: Boolean(errors.securityQuestion),\n            helperText: errors.securityQuestion,\n            children: securityQuestions.map((question, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: question,\n              children: question\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            margin: \"normal\",\n            required: true,\n            fullWidth: true,\n            id: \"answer\",\n            label: \"Answer\",\n            name: \"answer\",\n            autoComplete: \"answer\",\n            value: formData.answer,\n            onChange: handleChange,\n            error: Boolean(errors.answer),\n            helperText: errors.answer\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            margin: \"normal\",\n            required: true,\n            fullWidth: true,\n            name: \"newPassword\",\n            label: \"New Password\",\n            type: \"password\",\n            id: \"newPassword\",\n            autoComplete: \"new-password\",\n            value: formData.newPassword,\n            onChange: handleChange,\n            error: Boolean(errors.newPassword),\n            helperText: errors.newPassword\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            fullWidth: true,\n            variant: \"contained\",\n            sx: {\n              mt: 3,\n              mb: 2,\n              backgroundColor: '#6699cc'\n            },\n            children: \"Reset Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(PasswordReset, \"JODERoq313nsxIFzSYhjzMws3j8=\", false, function () {\n  return [useNavigate];\n});\n_c = PasswordReset;\nexport default PasswordReset;\nvar _c;\n$RefreshReg$(_c, \"PasswordReset\");","map":{"version":3,"names":["React","useState","NavBar","TextField","Button","Box","Container","Typography","MenuItem","axios","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","securityQuestions","PasswordReset","_s","navigate","formData","setFormData","username","securityQuestion","answer","newPassword","errors","setErrors","handleChange","e","name","value","target","handleSubmit","event","preventDefault","newErrors","post","questions","then","response","alert","catch","error","console","general","children","fileName","_jsxFileName","lineNumber","columnNumber","component","maxWidth","sx","marginTop","display","flexDirection","alignItems","variant","color","mt","mb","onSubmit","margin","required","fullWidth","id","label","autoComplete","autoFocus","onChange","Boolean","helperText","select","map","question","index","type","backgroundColor","_c","$RefreshReg$"],"sources":["/Users/wenjing/Desktop/COMP9900/front/my-app/src/compoment/PasswordReset.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport NavBar from './NavBar';\nimport { TextField, Button, Box, Container, Typography, MenuItem } from '@mui/material';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\n\nconst securityQuestions = [\n  'What was your childhood nickname?',\n  'What is the name of your favorite childhood friend?',\n  'What was your favorite place to visit as a child?',\n  'What was your dream job as a child?',\n];\n\nconst PasswordReset = () => {\n  const navigate = useNavigate();\n  const [formData, setFormData] = useState({\n    username: '',\n    securityQuestion: '',\n    answer: '',\n    newPassword: ''\n  });\n  const [errors, setErrors] = useState({});\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData({ ...formData, [name]: value });\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const { username, securityQuestion, answer, newPassword } = formData;\n\n    // 清除所有错误提示\n    setErrors({});\n\n    if (!username || !securityQuestion || !answer || !newPassword) {\n      const newErrors = {};\n      if (!username) newErrors.username = 'Username is required';\n      if (!securityQuestion) newErrors.securityQuestion = 'Security question is required';\n      if (!answer) newErrors.answer = 'Answer is required';\n      if (!newPassword) newErrors.newPassword = 'New password is required';\n      setErrors(newErrors);\n      return;\n    }\n\n    axios.post('http://192.168.20.10:8000/api/reset_password/', {\n      username: username,\n      questions: securityQuestion,\n      answer: answer,\n      newPassword: newPassword\n    })\n    .then(function (response) {\n      alert('Password reset successfully.');\n      navigate('/pipeline'); // 密码重置成功后跳转\n    })\n    .catch(function (error) {\n      console.error('Error:', error);\n      setErrors({ ...errors, general: 'Failed to reset password, please try again.' });\n    });\n  };\n\n  return (\n    <>\n      <NavBar />\n      <Container component=\"main\" maxWidth=\"xs\">\n        <Box\n          sx={{\n            marginTop: 15,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}\n        >\n          <Typography component=\"h1\" variant=\"h5\">\n            Password Reset\n          </Typography>\n          {errors.general && (\n            <Typography color=\"error\" sx={{ mt: 1, mb: 1 }}>\n              {errors.general}\n            </Typography>\n          )}\n          <Box component=\"form\" onSubmit={handleSubmit} sx={{ mt: 1 }}>\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"username\"\n              label=\"Username\"\n              name=\"username\"\n              autoComplete=\"username\"\n              autoFocus\n              value={formData.username}\n              onChange={handleChange}\n              error={Boolean(errors.username)}\n              helperText={errors.username}\n            />\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"securityQuestion\"\n              select\n              label=\"Security Question\"\n              name=\"securityQuestion\"\n              autoComplete=\"security-question\"\n              value={formData.securityQuestion}\n              onChange={handleChange}\n              error={Boolean(errors.securityQuestion)}\n              helperText={errors.securityQuestion}\n            >\n              {securityQuestions.map((question, index) => (\n                <MenuItem key={index} value={question}>\n                  {question}\n                </MenuItem>\n              ))}\n            </TextField>\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"answer\"\n              label=\"Answer\"\n              name=\"answer\"\n              autoComplete=\"answer\"\n              value={formData.answer}\n              onChange={handleChange}\n              error={Boolean(errors.answer)}\n              helperText={errors.answer}\n            />\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"newPassword\"\n              label=\"New Password\"\n              type=\"password\"\n              id=\"newPassword\"\n              autoComplete=\"new-password\"\n              value={formData.newPassword}\n              onChange={handleChange}\n              error={Boolean(errors.newPassword)}\n              helperText={errors.newPassword}\n            />\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2, backgroundColor: '#6699cc' }}\n            >\n              Reset Password\n            </Button>\n          </Box>\n        </Box>\n      </Container>\n    </>\n  );\n};\n\nexport default PasswordReset;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,UAAU;AAC7B,SAASC,SAAS,EAAEC,MAAM,EAAEC,GAAG,EAAEC,SAAS,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,eAAe;AACvF,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE/C,MAAMC,iBAAiB,GAAG,CACxB,mCAAmC,EACnC,qDAAqD,EACrD,mDAAmD,EACnD,qCAAqC,CACtC;AAED,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAMC,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGnB,QAAQ,CAAC;IACvCoB,QAAQ,EAAE,EAAE;IACZC,gBAAgB,EAAE,EAAE;IACpBC,MAAM,EAAE,EAAE;IACVC,WAAW,EAAE;EACf,CAAC,CAAC;EACF,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGzB,QAAQ,CAAC,CAAC,CAAC,CAAC;EAExC,MAAM0B,YAAY,GAAIC,CAAC,IAAK;IAC1B,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,CAAC,CAACG,MAAM;IAChCX,WAAW,CAAC;MAAE,GAAGD,QAAQ;MAAE,CAACU,IAAI,GAAGC;IAAM,CAAC,CAAC;EAC7C,CAAC;EAED,MAAME,YAAY,GAAIC,KAAK,IAAK;IAC9BA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtB,MAAM;MAAEb,QAAQ;MAAEC,gBAAgB;MAAEC,MAAM;MAAEC;IAAY,CAAC,GAAGL,QAAQ;;IAEpE;IACAO,SAAS,CAAC,CAAC,CAAC,CAAC;IAEb,IAAI,CAACL,QAAQ,IAAI,CAACC,gBAAgB,IAAI,CAACC,MAAM,IAAI,CAACC,WAAW,EAAE;MAC7D,MAAMW,SAAS,GAAG,CAAC,CAAC;MACpB,IAAI,CAACd,QAAQ,EAAEc,SAAS,CAACd,QAAQ,GAAG,sBAAsB;MAC1D,IAAI,CAACC,gBAAgB,EAAEa,SAAS,CAACb,gBAAgB,GAAG,+BAA+B;MACnF,IAAI,CAACC,MAAM,EAAEY,SAAS,CAACZ,MAAM,GAAG,oBAAoB;MACpD,IAAI,CAACC,WAAW,EAAEW,SAAS,CAACX,WAAW,GAAG,0BAA0B;MACpEE,SAAS,CAACS,SAAS,CAAC;MACpB;IACF;IAEA1B,KAAK,CAAC2B,IAAI,CAAC,+CAA+C,EAAE;MAC1Df,QAAQ,EAAEA,QAAQ;MAClBgB,SAAS,EAAEf,gBAAgB;MAC3BC,MAAM,EAAEA,MAAM;MACdC,WAAW,EAAEA;IACf,CAAC,CAAC,CACDc,IAAI,CAAC,UAAUC,QAAQ,EAAE;MACxBC,KAAK,CAAC,8BAA8B,CAAC;MACrCtB,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC;IACzB,CAAC,CAAC,CACDuB,KAAK,CAAC,UAAUC,KAAK,EAAE;MACtBC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;MAC9BhB,SAAS,CAAC;QAAE,GAAGD,MAAM;QAAEmB,OAAO,EAAE;MAA8C,CAAC,CAAC;IAClF,CAAC,CAAC;EACJ,CAAC;EAED,oBACEhC,OAAA,CAAAE,SAAA;IAAA+B,QAAA,gBACEjC,OAAA,CAACV,MAAM;MAAA4C,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVrC,OAAA,CAACN,SAAS;MAAC4C,SAAS,EAAC,MAAM;MAACC,QAAQ,EAAC,IAAI;MAAAN,QAAA,eACvCjC,OAAA,CAACP,GAAG;QACF+C,EAAE,EAAE;UACFC,SAAS,EAAE,EAAE;UACbC,OAAO,EAAE,MAAM;UACfC,aAAa,EAAE,QAAQ;UACvBC,UAAU,EAAE;QACd,CAAE;QAAAX,QAAA,gBAEFjC,OAAA,CAACL,UAAU;UAAC2C,SAAS,EAAC,IAAI;UAACO,OAAO,EAAC,IAAI;UAAAZ,QAAA,EAAC;QAExC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC,EACZxB,MAAM,CAACmB,OAAO,iBACbhC,OAAA,CAACL,UAAU;UAACmD,KAAK,EAAC,OAAO;UAACN,EAAE,EAAE;YAAEO,EAAE,EAAE,CAAC;YAAEC,EAAE,EAAE;UAAE,CAAE;UAAAf,QAAA,EAC5CpB,MAAM,CAACmB;QAAO;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CACb,eACDrC,OAAA,CAACP,GAAG;UAAC6C,SAAS,EAAC,MAAM;UAACW,QAAQ,EAAE7B,YAAa;UAACoB,EAAE,EAAE;YAAEO,EAAE,EAAE;UAAE,CAAE;UAAAd,QAAA,gBAC1DjC,OAAA,CAACT,SAAS;YACR2D,MAAM,EAAC,QAAQ;YACfC,QAAQ;YACRC,SAAS;YACTC,EAAE,EAAC,UAAU;YACbC,KAAK,EAAC,UAAU;YAChBrC,IAAI,EAAC,UAAU;YACfsC,YAAY,EAAC,UAAU;YACvBC,SAAS;YACTtC,KAAK,EAAEX,QAAQ,CAACE,QAAS;YACzBgD,QAAQ,EAAE1C,YAAa;YACvBe,KAAK,EAAE4B,OAAO,CAAC7C,MAAM,CAACJ,QAAQ,CAAE;YAChCkD,UAAU,EAAE9C,MAAM,CAACJ;UAAS;YAAAyB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC7B,CAAC,eACFrC,OAAA,CAACT,SAAS;YACR2D,MAAM,EAAC,QAAQ;YACfC,QAAQ;YACRC,SAAS;YACTC,EAAE,EAAC,kBAAkB;YACrBO,MAAM;YACNN,KAAK,EAAC,mBAAmB;YACzBrC,IAAI,EAAC,kBAAkB;YACvBsC,YAAY,EAAC,mBAAmB;YAChCrC,KAAK,EAAEX,QAAQ,CAACG,gBAAiB;YACjC+C,QAAQ,EAAE1C,YAAa;YACvBe,KAAK,EAAE4B,OAAO,CAAC7C,MAAM,CAACH,gBAAgB,CAAE;YACxCiD,UAAU,EAAE9C,MAAM,CAACH,gBAAiB;YAAAuB,QAAA,EAEnC9B,iBAAiB,CAAC0D,GAAG,CAAC,CAACC,QAAQ,EAAEC,KAAK,kBACrC/D,OAAA,CAACJ,QAAQ;cAAasB,KAAK,EAAE4C,QAAS;cAAA7B,QAAA,EACnC6B;YAAQ,GADIC,KAAK;cAAA7B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAEV,CACX;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACO,CAAC,eACZrC,OAAA,CAACT,SAAS;YACR2D,MAAM,EAAC,QAAQ;YACfC,QAAQ;YACRC,SAAS;YACTC,EAAE,EAAC,QAAQ;YACXC,KAAK,EAAC,QAAQ;YACdrC,IAAI,EAAC,QAAQ;YACbsC,YAAY,EAAC,QAAQ;YACrBrC,KAAK,EAAEX,QAAQ,CAACI,MAAO;YACvB8C,QAAQ,EAAE1C,YAAa;YACvBe,KAAK,EAAE4B,OAAO,CAAC7C,MAAM,CAACF,MAAM,CAAE;YAC9BgD,UAAU,EAAE9C,MAAM,CAACF;UAAO;YAAAuB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC3B,CAAC,eACFrC,OAAA,CAACT,SAAS;YACR2D,MAAM,EAAC,QAAQ;YACfC,QAAQ;YACRC,SAAS;YACTnC,IAAI,EAAC,aAAa;YAClBqC,KAAK,EAAC,cAAc;YACpBU,IAAI,EAAC,UAAU;YACfX,EAAE,EAAC,aAAa;YAChBE,YAAY,EAAC,cAAc;YAC3BrC,KAAK,EAAEX,QAAQ,CAACK,WAAY;YAC5B6C,QAAQ,EAAE1C,YAAa;YACvBe,KAAK,EAAE4B,OAAO,CAAC7C,MAAM,CAACD,WAAW,CAAE;YACnC+C,UAAU,EAAE9C,MAAM,CAACD;UAAY;YAAAsB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAChC,CAAC,eACFrC,OAAA,CAACR,MAAM;YACLwE,IAAI,EAAC,QAAQ;YACbZ,SAAS;YACTP,OAAO,EAAC,WAAW;YACnBL,EAAE,EAAE;cAAEO,EAAE,EAAE,CAAC;cAAEC,EAAE,EAAE,CAAC;cAAEiB,eAAe,EAAE;YAAU,CAAE;YAAAhC,QAAA,EAClD;UAED;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC;EAAA,eACZ,CAAC;AAEP,CAAC;AAAChC,EAAA,CA/IID,aAAa;EAAA,QACAN,WAAW;AAAA;AAAAoE,EAAA,GADxB9D,aAAa;AAiJnB,eAAeA,aAAa;AAAC,IAAA8D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}